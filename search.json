[{"path":"https://otelsdk.r-lib.org/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 opentelemetry authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://otelsdk.r-lib.org/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Gábor Csárdi. Author, maintainer. . Copyright holder, funder. opentelemetry-cpp authors. Contributor.","code":""},{"path":"https://otelsdk.r-lib.org/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Csárdi G (2025). otelsdk: 'R' 'SDK' Exporters 'OpenTelemetry'. R package version 0.0.0.9000, https://otelsdk.r-lib.org.","code":"@Manual{,   title = {otelsdk: 'R' 'SDK' and Exporters for 'OpenTelemetry'},   author = {Gábor Csárdi},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://otelsdk.r-lib.org}, }"},{"path":"https://otelsdk.r-lib.org/index.html","id":"otelsdk","dir":"","previous_headings":"","what":"R SDK and Exporters for OpenTelemetry","title":"R SDK and Exporters for OpenTelemetry","text":"OpenTelemetry SDK R packages projects OpenTelemetry observability framework. OpenTelemetry collection tools, APIs, SDKs used instrument, generate, collect, export telemetry data metrics, logs, traces, analysis order understand software’s performance behavior. introduction OpenTelemetry, see OpenTelemetry website docs. learn instrument R code, see Getting Started otel package. learn collect telemetry data instrumented R package project, see Collecting Telemetry Data. project status, installation instructions , read .","code":""},{"path":"https://otelsdk.r-lib.org/index.html","id":"features","dir":"","previous_headings":"","what":"Features","title":"R SDK and Exporters for OpenTelemetry","text":"Lightweight packages. otel small R package without dependencies compiled code. otelsdk needs C++11 compiler otel. Minimal performance impact tracing disabled. otel functions evaluate arguments case. Zero-code instrumentation support. Add tracing () functions selected packages automatically. Configuration via environment variables. Minimal extra code. Add tracing function single extra function call. Production mode: otel functions crash production app production mode. Development mode: otel functions error early development mode.","code":""},{"path":"https://otelsdk.r-lib.org/index.html","id":"the-otel-and-otelsdk-r-packages","dir":"","previous_headings":"","what":"The otel and otelsdk R packages","title":"R SDK and Exporters for OpenTelemetry","text":"Use otel package dependency want instrument R package project OpenTelemetry. Use otelsdk package produce OpenTelemetry output R package project instrumented otel package.","code":""},{"path":"https://otelsdk.r-lib.org/index.html","id":"reference-documentation","dir":"","previous_headings":"","what":"Reference Documentation","title":"R SDK and Exporters for OpenTelemetry","text":"otel: https://otel.r-lib.org/reference/ otelsdk: https://otelsdk.r-lib.org/reference/","code":""},{"path":"https://otelsdk.r-lib.org/index.html","id":"status","dir":"","previous_headings":"","what":"Status","title":"R SDK and Exporters for OpenTelemetry","text":"current status major functional components OpenTelemetry R follows:","code":""},{"path":"https://otelsdk.r-lib.org/index.html","id":"version-support","dir":"","previous_headings":"","what":"Version support","title":"R SDK and Exporters for OpenTelemetry","text":"otel otelsdk support R 3.6.0 higher Unix R 4.3.0 higher Windows.","code":""},{"path":"https://otelsdk.r-lib.org/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"R SDK and Exporters for OpenTelemetry","text":"can install development version otel GitHub :","code":"# install.packages(\"pak\") pak::pak(\"r-lib/otelsdk\")"},{"path":"https://otelsdk.r-lib.org/index.html","id":"compiling-from-source","dir":"","previous_headings":"Installation","what":"Compiling from source","title":"R SDK and Exporters for OpenTelemetry","text":"compile otelsdk source, need install protobuf library first: Windows install correct version Rtools. Linux install appropriate package distribution. macOS, can use CRAN’s protobuf build Homebrew. using CRAN’s build, must uninstall unlink Homebrew protobuf:","code":"brew unlink protobuf"},{"path":"https://otelsdk.r-lib.org/index.html","id":"repositories","dir":"","previous_headings":"","what":"Repositories","title":"R SDK and Exporters for OpenTelemetry","text":"otel: https://github.com/r-lib/otel otelsdk: https://github.com/r-lib/otelsdk","code":""},{"path":"https://otelsdk.r-lib.org/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"R SDK and Exporters for OpenTelemetry","text":"MIT © Posit, PBC","code":""},{"path":"https://otelsdk.r-lib.org/reference/collecting.html","id":null,"dir":"Reference","previous_headings":"","what":"Collecting Telemetry Data — Collecting Telemetry Data","title":"Collecting Telemetry Data — Collecting Telemetry Data","text":"page collecting telemetry data instrumented R packages. need help instrumenting R package, see Getting Started otel package.","code":""},{"path":"https://otelsdk.r-lib.org/reference/collecting.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collecting Telemetry Data — Collecting Telemetry Data","text":"applicable.","code":""},{"path":"https://otelsdk.r-lib.org/reference/collecting.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collecting Telemetry Data — Collecting Telemetry Data","text":"Instrument R package project using otel package. Alternatively, use Zero Code Instrumentation automatically instrument selected packages. Install otelsdk package. Choose exporter otelsdk package. http exporter sends OpenTelemetry output OTLP/HTTP. Set OTEL_TRACES_EXPORTER environment variable point exporter choice. E.g. OTLP/HTTP set OTEL_TRACES_EXPORTER=http. sending telemetry data HTTP, typically need configure URL OpenTelemetry collector, possibly also need supply token HTTP header, possibly resource attributes. Follow instructions provider collector. typically instructions R, generic instructions environment variables work otelsdk R package. E.g. Grafana need something like   See examples . See environment variables manual chosen provider details configuring otelsdk exporters. Start R app. Telemetry data exported chosen exporter.","code":"OTEL_EXPORTER_OTLP_PROTOCOL=\"http\" OTEL_EXPORTER_OTLP_ENDPOINT=\"https://otlp-gateway-prod-eu-central-0.grafana.net/otlp\" \\ OTEL_RESOURCE_ATTRIBUTES=\"service.name=<name-of-your-app>,service.namespace=<name-of-your-namespace>,deployment.environment=test\" OTEL_EXPORTER_OTLP_HEADERS=\"Authorization=Basic%20<base64-encoded-token>\""},{"path":[]},{"path":"https://otelsdk.r-lib.org/reference/collecting.html","id":"setup-for-remote-collectors","dir":"Reference","previous_headings":"","what":"Setup for remote collectors","title":"Collecting Telemetry Data — Collecting Telemetry Data","text":"lot services offer OpenTelemetry collector tracers, logs metrics, many supporting three . also local apps work collector. tried otelsdk following ones:","code":""},{"path":"https://otelsdk.r-lib.org/reference/collecting.html","id":"grafana","dir":"Reference","previous_headings":"","what":"Grafana","title":"Collecting Telemetry Data — Collecting Telemetry Data","text":"Follow documentation. Create API token. need use Grafana instrance ID username, token password HTTP Basic auth. E.g. R get base64 encoded token. instance-id (currently seven digit) number string glc_ prefix.   use encoded token set Authorization header:   endpoint URL probably different, use one see dashboard. want export logs /metrics, set environment variables, respectively:   also makes sense set desired log level. Grafana suggests running OpenTelemetry collector premise instead sending telemetry data directly. nevertheless can start without running collector, call \"quick start\" mode.","code":"openssl::base64_encode(\"<instance-id>:<api-token>\") OTEL_EXPORTER_OTLP_PROTOCOL=\"http\" OTEL_EXPORTER_OTLP_ENDPOINT=\"https://otlp-gateway-prod-eu-central-0.grafana.net/otlp\" \\ OTEL_EXPORTER_OTLP_HEADERS=\"Authorization=Basic%20<base64-encoded-token>\" OTEL_RESOURCE_ATTRIBUTES=\"service.name=<name-of-your-app,service.namespace=<name-of-your-namespace>,deployment.environment=test\" OTEL_LOGS_EXPORTER=http OTEL_LOG_LEVEL=debug OTEL_METRICS_EXPORTER=http"},{"path":"https://otelsdk.r-lib.org/reference/collecting.html","id":"pydantic-logfire","dir":"Reference","previous_headings":"","what":"Pydantic Logfire","title":"Collecting Telemetry Data — Collecting Telemetry Data","text":"Create project write token. Note URLs need use different within EU! probably need replace us eu URL EU. Set environment variables:   logs also set OTEL_LOGS_EXPORTER desired log level:   exporting metrics also set","code":"OTEL_TRACES_EXPORTER=http OTEL_EXPORTER_OTLP_ENDPOINT=\"https://logfire-us.pydantic.dev\" OTEL_EXPORTER_OTLP_HEADERS=\"Authorization=<your-write-token>\" OTEL_LOGS_EXPORTER=http OTEL_LOG_LEVEL=debug OTEL_METRICS_EXPORTER=http"},{"path":[]},{"path":"https://otelsdk.r-lib.org/reference/collecting.html","id":"otel-tui","dir":"Reference","previous_headings":"","what":"otel-tui","title":"Collecting Telemetry Data — Collecting Telemetry Data","text":"otel-tui terminal app supports traces, logs metrics. great development, can keep telemetry local instrumenting package app. Follow installation instructions run app terminal:   listens default port, setup simple, set environment variables (subset want metrics logs):","code":"otel-tui OTEL_TRACES_EXPORTER=http OTEL_LOGS_EXPORTER=http OTEL_LOG_LEVEL=debug OTEL_METRICS_EXPORTER=http"},{"path":"https://otelsdk.r-lib.org/reference/collecting.html","id":"otel-desktop-viewer","dir":"Reference","previous_headings":"","what":"otel-desktop-viewer","title":"Collecting Telemetry Data — Collecting Telemetry Data","text":"otel-desktop-viewer similar otel-tui, web UI. Follow installation instructions start app terminal:   start new windows tab local web browser. Set usual environment variable R app:","code":"otel-desktop-viewer OTEL_TRACES_EXPORTER=http"},{"path":"https://otelsdk.r-lib.org/reference/collecting.html","id":"jaeger","dir":"Reference","previous_headings":"","what":"Jaeger","title":"Collecting Telemetry Data — Collecting Telemetry Data","text":"Docker, can start Jaeger container default port:   Go http://localhost:16686/ view Jaeger UI.","code":"docker run --rm --name jaeger \\  -p 16686:16686 \\  -p 4317:4317 \\  -p 4318:4318 \\  -p 5778:5778 \\  -p 9411:9411 \\  jaegertracing/jaeger:2.4.0"},{"path":"https://otelsdk.r-lib.org/reference/collecting.html","id":"signoz","dir":"Reference","previous_headings":"","what":"SigNoz","title":"Collecting Telemetry Data — Collecting Telemetry Data","text":"run SigNoz locally Docker, clone repository https://github.com/SigNoz/signoz:   run Docker Compose deploy/docker/ subdirectory:   Go http://localhost:8080 see SigNoz UI.","code":"git clone --depth 1 https://github.com/SigNoz/signoz cd deploy/docker docker compose up"},{"path":"https://otelsdk.r-lib.org/reference/collecting.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Collecting Telemetry Data — Collecting Telemetry Data","text":"","code":"# See above"},{"path":"https://otelsdk.r-lib.org/reference/environmentvariables.html","id":null,"dir":"Reference","previous_headings":"","what":"Environment variables to configure otelsdk — Environment Variables","title":"Environment variables to configure otelsdk — Environment Variables","text":"See also Environment Variables otel package, charge selecting exporters use.","code":""},{"path":"https://otelsdk.r-lib.org/reference/environmentvariables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Environment variables to configure otelsdk — Environment Variables","text":"applicable.","code":""},{"path":"https://otelsdk.r-lib.org/reference/environmentvariables.html","id":"the-opentelemetry-specification","dir":"Reference","previous_headings":"","what":"The OpenTelemetry Specification","title":"Environment variables to configure otelsdk — Environment Variables","text":"environment variables based OpenTelemetry Specification, version 1.47.0. environment variables 'OTEL_R_' prefix (yet) standard, specific otel otelsdk R packages.","code":""},{"path":"https://otelsdk.r-lib.org/reference/environmentvariables.html","id":"general-sdk-configuration","dir":"Reference","previous_headings":"","what":"General SDK Configuration","title":"Environment variables to configure otelsdk — Environment Variables","text":"OTEL_SDK_DISABLED Set 'true' value disable SDK signals. OTEL_RESOURCE_ATTRIBUTES Key-value pairs used resource attributes. See Resource SDK details. OTEL_SERVICE_NAME Sets value service.name resource attribute. OTEL_LOG_LEVEL Log level used SDK internal logger. R also used default log level OpenTelemetry loggers.","code":""},{"path":"https://otelsdk.r-lib.org/reference/environmentvariables.html","id":"selecting-exporters","dir":"Reference","previous_headings":"","what":"Selecting Exporters","title":"Environment variables to configure otelsdk — Environment Variables","text":"otel responsible selecting providers use traces, logs metrics. can use environment variables point otel functions desired providers. none environment variables set, otel emit telemetry data. OTEL_TRACES_EXPORTER name selected tracer provider. See otel::get_default_tracer_provider() possible values. OTEL_R_TRACES_EXPORTER R specific version OTEL_TRACES_EXPORTER. OTEL_LOGS_EXPORTER name selected logger provider. See otel::get_default_logger_provider() possible values. OTEL_R_LOGS_EXPORTER R specific version OTEL_LOGS_EXPORTER. OTEL_METRICS_EXPORTER name selected meter provider. See otel::get_default_meter_provider() possible values. OTEL_R_METRICS_EXPORTER R specific version OTEL_METRICS_EXPORTER.","code":""},{"path":"https://otelsdk.r-lib.org/reference/environmentvariables.html","id":"suppressing-instrumentation-scopes-r-packages-","dir":"Reference","previous_headings":"","what":"Suppressing Instrumentation Scopes (R Packages)","title":"Environment variables to configure otelsdk — Environment Variables","text":"otel two environment variables fine tune instrumentation scopes (.e. R packages, typically) emit telemetry data. default, .e. neither set, packages emit telemetry data. OTEL_R_EMIT_SCOPES Set environment variable comma separated string instrumentation scope names R package names restrict telemetry packages . name instrumentation scope name tracer, logger meter, see otel::default_tracer_name(). can mix package names instrumentation scope names can also use wildcards (globbing). example value OTEL_R_EMIT_SCOPES=\"org.r-lib.*,dplyr\" selects packages instrumentation scope starts org.r-lib. also dplyr. OTEL_R_SUPPRESS_SCOPES Set environment variable comma separated string instrumentation scope names R package names suppress telemetry data packages. name instrumentation scope name tracer, logger meter, see otel::default_tracer_name(). can mix package names instrumentation scope names can also use wildcards (globbing). example value OTEL_R_SUPPRESS_SCOPES=\"org.r-lib.*,dplyr\" excludes packages instrumentation scope starts org.r-lib. also dplyr.","code":""},{"path":"https://otelsdk.r-lib.org/reference/environmentvariables.html","id":"zero-code-instrumentation","dir":"Reference","previous_headings":"","what":"Zero Code Instrumentation","title":"Environment variables to configure otelsdk — Environment Variables","text":"otel can instrument R packages OpenTelemetry data collection without changing source code. relies changing code R functions manually using base::trace() can configured using environment variables. OTEL_R_INSTRUMENT_PKGS Set OTEL_R_INSTRUMENT_PKGS comma separated list packages instrument. automatic instrumentation happens otel package loaded, general best set environment variable loading R. OTEL_R_INSTRUMENT_PKGS_<pkg>_INCLUDE automatically instrumented package, set environment variable instrument subset functions. parsed comma separated string function names, may also include ? * wildcards (globbing). OTEL_R_INSTRUMENT_PKGS_<pkg>_EXCLUDE automatically instrumented package, set environment variable exclude functions instrumentation. syntax *_INCLUDE pair. set, inclusion applied exclusion.","code":""},{"path":"https://otelsdk.r-lib.org/reference/environmentvariables.html","id":"attribute-limits","dir":"Reference","previous_headings":"","what":"Attribute Limits","title":"Environment variables to configure otelsdk — Environment Variables","text":"OTEL_ATTRIBUTE_COUNT_LIMIT Set environment variable limit number attributes single span, log record, metric measurement, etc. unset, default limit 128 attributes. Note attributes specified otel::as_attributes() subject environment variable. OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT Set environment variable limit length vectors attributes single span, log record, metric measurement, etc. unset, limit lengths vectors attributes. Note attributes specified otel::as_attributes() subject environment variable.","code":""},{"path":"https://otelsdk.r-lib.org/reference/environmentvariables.html","id":"otlp-http-exporters","dir":"Reference","previous_headings":"","what":"OTLP/HTTP Exporters","title":"Environment variables to configure otelsdk — Environment Variables","text":"environment variables used tracer_provider_http, meter_provider_http logger_provider_http. every set environment variables, signal specific ones priority generic one. OTEL_EXPORTER_OTLP_ENDPOINT | OTEL_EXPORTER_OTLP_TRACES_ENDPOINT | OTEL_EXPORTER_OTLP_METRICS_ENDPOINT | OTEL_EXPORTER_OTLP_LOGS_ENDPOINT OTLP URL send telemetry data . generic environment variable used, exporter appends signal specific endpoint . signal specific environment variables used . OpenTelemetry specification. OTEL_EXPORTER_OTLP_PROTOCOL | OTEL_EXPORTER_OTLP_TRACES_PROTOCOL | OTEL_EXPORTER_OTLP_METRICS_PROTOCOL | OTEL_EXPORTER_OTLP_LOGS_PROTOCOL transport protocol. Possible values: http/json, http/protobuf. OTEL_R_EXPORTER_OTLP_JSON_BYTES_MAPPING | OTEL_R_EXPORTER_OTLP_TRACES_JSON_BYTES_MAPPING | OTEL_R_EXPORTER_OTLP_METRICS_JSON_BYTES_MAPPING | OTEL_R_EXPORTER_OTLP_LOGS_JSON_BYTES_MAPPING Encoding used trace ids spans id. Possible values: hexid, base64, hex. OTEL_R_EXPORTER_OTLP_USE_JSON_NAME | OTEL_R_EXPORTER_OTLP_TRACES_USE_JSON_NAME | OTEL_R_EXPORTER_OTLP_METRICS_USE_JSON_NAME | OTEL_R_EXPORTER_OTLP_LOGS_USE_JSON_NAME Whether use json name protobuf field set key json. boolean value (flag, true false). OTEL_R_EXPORTER_OTLP_CONSOLE_DEBUG | OTEL_R_EXPORTER_OTLP_TRACES_CONSOLE_DEBUG | OTEL_R_EXPORTER_OTLP_METRICS_CONSOLE_DEBUG | OTEL_R_EXPORTER_OTLP_LOGS_CONSOLE_DEBUG Whether print debug messages console. boolean value (flag, true false). OTEL_EXPORTER_OTLP_TIMEOUT | OTEL_EXPORTER_OTLP_TRACES_TIMEOUT | OTEL_EXPORTER_OTLP_METRICS_TIMEOUT | OTEL_EXPORTER_OTLP_LOGS_TIMEOUT HTTP timeout milliseconds. OTEL_EXPORTER_OTLP_HEADERS | OTEL_EXPORTER_OTLP_TRACES_HEADERS | OTEL_EXPORTER_OTLP_METRICS_HEADERS | OTEL_EXPORTER_OTLP_LOGS_HEADERS Additional HTTP headers send. E.g. Authorization commonly used. must comma separated list headers, header=value form. OTEL_R_EXPORTER_OTLP_SSL_INSECURE_SKIP_VERIFY | OTEL_R_EXPORTER_OTLP_TRACES_SSL_INSECURE_SKIP_VERIFY | OTEL_R_EXPORTER_OTLP_METRICS_SSL_INSECURE_SKIP_VERIFY | OTEL_R_EXPORTER_OTLP_LOGS_SSL_INSECURE_SKIP_VERIFY Whether disable SSL. boolean value (flag, true false). OTEL_EXPORTER_OTLP_CERTIFICATE | OTEL_EXPORTER_OTLP_TRACES_CERTIFICATE | OTEL_EXPORTER_OTLP_METRICS_CERTIFICATE | OTEL_EXPORTER_OTLP_LOGS_CERTIFICATE CA certificate, path file. OTEL_EXPORTER_OTLP_CERTIFICATE_STRING | OTEL_EXPORTER_OTLP_TRACES_CERTIFICATE_STRING | OTEL_EXPORTER_OTLP_METRICS_CERTIFICATE_STRING | OTEL_EXPORTER_OTLP_LOGS_CERTIFICATE_STRING CA certificate, string. OTEL_EXPORTER_OTLP_CLIENT_KEY | OTEL_EXPORTER_OTLP_TRACES_CLIENT_KEY | OTEL_EXPORTER_OTLP_METRICS_CLIENT_KEY | OTEL_EXPORTER_OTLP_LOGS_CLIENT_KEY SSL client key, path file. OTEL_EXPORTER_OTLP_CLIENT_KEY_STRING | OTEL_EXPORTER_OTLP_TRACES_CLIENT_KEY_STRING | OTEL_EXPORTER_OTLP_METRICS_CLIENT_KEY_STRING | OTEL_EXPORTER_OTLP_LOGS_CLIENT_KEY_STRING SSL client key string. OTEL_EXPORTER_OTLP_CLIENT_CERTIFICATE | OTEL_EXPORTER_OTLP_TRACES_CLIENT_CERTIFICATE | OTEL_EXPORTER_OTLP_METRICS_CLIENT_CERTIFICATE | OTEL_EXPORTER_OTLP_LOGS_CLIENT_CERTIFICATE SSL client certificate, path file. OTEL_EXPORTER_OTLP_CLIENT_CERTIFICATE_STRING | OTEL_EXPORTER_OTLP_TRACES_CLIENT_CERTIFICATE_STRING | OTEL_EXPORTER_OTLP_METRICS_CLIENT_CERTIFICATE_STRING | OTEL_EXPORTER_OTLP_LOGS_CLIENT_CERTIFICATE_STRING SSL client certificate, string. OTEL_R_EXPORTER_OTLP_SSL_MIN_TLS | OTEL_R_EXPORTER_OTLP_TRACES_SSL_MIN_TLS | OTEL_R_EXPORTER_OTLP_METRICS_SSL_MIN_TLS | OTEL_R_EXPORTER_OTLP_LOGS_SSL_MIN_TLS Minimum TLS version. OTEL_R_EXPORTER_OTLP_SSL_MAX_TLS | OTEL_R_EXPORTER_OTLP_TRACES_SSL_MAX_TLS | OTEL_R_EXPORTER_OTLP_METRICS_SSL_MAX_TLS | OTEL_R_EXPORTER_OTLP_LOGS_SSL_MAX_TLS Maximum TLS version. OTEL_R_EXPORTER_OTLP_SSL_CIPHER | OTEL_R_EXPORTER_OTLP_TRACES_SSL_CIPHER | OTEL_R_EXPORTER_OTLP_METRICS_SSL_CIPHER | OTEL_R_EXPORTER_OTLP_LOGS_SSL_CIPHER TLS cipher. OTEL_R_EXPORTER_OTLP_SSL_CIPHER_SUITE | OTEL_R_EXPORTER_OTLP_TRACES_SSL_CIPHER_SUITE | OTEL_R_EXPORTER_OTLP_METRICS_SSL_CIPHER_SUITE | OTEL_R_EXPORTER_OTLP_LOGS_SSL_CIPHER_SUITE TLS cipher suite. OTEL_EXPORTER_OTLP_COMPRESSION | OTEL_EXPORTER_OTLP_TRACES_COMPRESSION | OTEL_EXPORTER_OTLP_METRICS_COMPRESSION | OTEL_EXPORTER_OTLP_LOGS_COMPRESSION Compression use. none, gzip. OTEL_R_EXPORTER_OTLP_RETRY_POLICY_MAX_ATTEMPTS | OTEL_R_EXPORTER_OTLP_TRACES_RETRY_POLICY_MAX_ATTEMPTS | OTEL_R_EXPORTER_OTLP_METRICS_RETRY_POLICY_MAX_ATTEMPTS | OTEL_R_EXPORTER_OTLP_LOGS_RETRY_POLICY_MAX_ATTEMPTS maximum number call attempts, including original attempt. OTEL_R_EXPORTER_OTLP_RETRY_POLICY_INITIAL_BACKOFF | OTEL_R_EXPORTER_OTLP_TRACES_RETRY_POLICY_INITIAL_BACKOFF | OTEL_R_EXPORTER_OTLP_METRICS_RETRY_POLICY_INITIAL_BACKOFF | OTEL_R_EXPORTER_OTLP_LOGS_RETRY_POLICY_INITIAL_BACKOFF maximum initial back-delay retry attempts. actual backoff delay uniform random zero . milliseconds. OTEL_R_EXPORTER_OTLP_RETRY_POLICY_MAX_BACKOFF | OTEL_R_EXPORTER_OTLP_TRACES_RETRY_POLICY_MAX_BACKOFF | OTEL_R_EXPORTER_OTLP_METRICS_RETRY_POLICY_MAX_BACKOFF | OTEL_R_EXPORTER_OTLP_LOGS_RETRY_POLICY_MAX_BACKOFF maximum backoff places upper limit exponential backoff growth. OTEL_R_EXPORTER_OTLP_RETRY_POLICY_BACKOFF_MULTIPLIER | OTEL_R_EXPORTER_OTLP_TRACES_RETRY_POLICY_BACKOFF_MULTIPLIER | OTEL_R_EXPORTER_OTLP_METRICS_RETRY_POLICY_BACKOFF_MULTIPLIER | OTEL_R_EXPORTER_OTLP_LOGS_RETRY_POLICY_BACKOFF_MULTIPLIER backoff multiplied value retry attempt.","code":""},{"path":"https://otelsdk.r-lib.org/reference/environmentvariables.html","id":"otlp-file-exporters","dir":"Reference","previous_headings":"","what":"OTLP/FILE Exporters","title":"Environment variables to configure otelsdk — Environment Variables","text":"environment variables used tracer_provider_file, meter_provider_file logger_provider_file. every set environment variables, signal specific ones priority generic one. OTEL_EXPORTER_OTLP_FILE | OTEL_EXPORTER_OTLP_TRACES_FILE | OTEL_EXPORTER_OTLP_METRICS_FILE | OTEL_EXPORTER_OTLP_LOGS_FILE Output file pattern. May contain placeholders, see manual pages providers, linked beginning section. OTEL_EXPORTER_OTLP_FILE_ALIAS | OTEL_EXPORTER_OTLP_TRACES_FILE_ALIAS | OTEL_EXPORTER_OTLP_METRICS_FILE_ALIAS | OTEL_EXPORTER_OTLP_LOGS_FILE_ALIAS file always point latest file. May contain placeholders, see manual pages providers, linked beginning section. OTEL_EXPORTER_OTLP_FILE_FLUSH_INTERVAL | OTEL_EXPORTER_OTLP_TRACES_FILE_FLUSH_INTERVAL | OTEL_EXPORTER_OTLP_METRICS_FILE_FLUSH_INTERVAL | OTEL_EXPORTER_OTLP_LOGS_FILE_FLUSH_INTERVAL Interval force flush output. time interval specification, see Time Interval Options. OTEL_EXPORTER_OTLP_FILE_FLUSH_COUNT | OTEL_EXPORTER_OTLP_TRACES_FILE_FILE_SIZE | OTEL_EXPORTER_OTLP_METRICS_FILE_FILE_SIZE | OTEL_EXPORTER_OTLP_LOGS_FILE_FILE_SIZE Force flush output every flush_count records. OTEL_EXPORTER_OTLP_FILE_FILE_SIZE | OTEL_EXPORTER_OTLP_TRACES_FILE_FILE_SIZE | OTEL_EXPORTER_OTLP_METRICS_FILE_FILE_SIZE | OTEL_EXPORTER_OTLP_LOGS_FILE_FILE_SIZE File size rotate output files. file size specification, see File Size Options. OTEL_EXPORTER_OTLP_FILE_ROTATE_SIZE | OTEL_EXPORTER_OTLP_TRACES_FILE_ROTATE_SIZE | OTEL_EXPORTER_OTLP_METRICS_FILE_ROTATE_SIZE | OTEL_EXPORTER_OTLP_LOGS_FILE_ROTATE_SIZE many rotated output files keep.","code":""},{"path":"https://otelsdk.r-lib.org/reference/environmentvariables.html","id":"batch-processor","dir":"Reference","previous_headings":"","what":"Batch Processor","title":"Environment variables to configure otelsdk — Environment Variables","text":"environment variables used tracer_provider_http, logger_provider_http. OTEL_BSP_SCHEDULE_DELAY maximum buffer/queue size. size reached, spans dropped. Must positive. OTEL_BSP_MAX_QUEUE_SIZE maximum batch size every export. must smaller equal max_queue_size. Must positive. OTEL_BSP_MAX_EXPORT_BATCH_SIZE time interval two consecutive exports, milliseconds.","code":""},{"path":"https://otelsdk.r-lib.org/reference/environmentvariables.html","id":"metric-reader","dir":"Reference","previous_headings":"","what":"Metric Reader","title":"Environment variables to configure otelsdk — Environment Variables","text":"environment variables used meter_provider_http, meter_provider_stdstream meter_provider_memory meter_provider_file. OTEL_METRIC_EXPORT_INTERVAL time interval start two export attempts, milliseconds. OTEL_METRIC_EXPORT_TIMEOUT Maximum allowed time export data, milliseconds.","code":""},{"path":"https://otelsdk.r-lib.org/reference/environmentvariables.html","id":"metric-exporters","dir":"Reference","previous_headings":"","what":"Metric Exporters","title":"Environment variables to configure otelsdk — Environment Variables","text":"environment variables used meter_provider_http meter_provider_memory. OTEL_R_EXPORTER_OTLP_AGGREGATION_TEMPORALITY Aggregation temporality. Possible values: unspecified, delta, cumulative, lowmemory. See OpenTelemetry data model.","code":""},{"path":"https://otelsdk.r-lib.org/reference/environmentvariables.html","id":"standard-stream-exporters","dir":"Reference","previous_headings":"","what":"Standard Stream Exporters","title":"Environment variables to configure otelsdk — Environment Variables","text":"environment variables used tracer_provider_stdstream, meter_provider_stdstream logger_provider_stdstream. signal specific environment variables priority generic one. OTEL_R_EXPORTER_STDSTREAM_OUTPUT | OTEL_R_EXPORTER_STDSTREAM_TRACES_OUTPUT | OTEL_R_EXPORTER_STDSTREAM_METRICS_OUTPUT | OTEL_R_EXPORTER_STDSTREAM_LOGS_OUTPUT write output. Can stdout: write output standard output, stderr: write output standard error, another string: write output file. (write output file named stdout \"stderr, use ./ prefix.)","code":""},{"path":"https://otelsdk.r-lib.org/reference/environmentvariables.html","id":"in-memory-exporters","dir":"Reference","previous_headings":"","what":"In-Memory Exporters","title":"Environment variables to configure otelsdk — Environment Variables","text":"environment variables used tracer_provider_memory meter_provider_memory. signal specific environment variables priority generic one. OTEL_R_EXPORTER_MEMORY_BUFFER_SIZE | OTEL_R_EXPORTER_MEMORY_TRACES_BUFFER_SIZE | OTEL_R_EXPORTER_MEMORY_METRICS_BUFFER_SIZE | OTEL_R_EXPORTER_MEMORY_BUFFER_SIZE Buffer size, maximum number spans metrics measurements provider can record.","code":""},{"path":"https://otelsdk.r-lib.org/reference/environmentvariables.html","id":"support-matrix-of-all-opentelemetry-environment-variables-for-r","dir":"Reference","previous_headings":"","what":"Support Matrix of all OpenTelemetry Environment Variables for R","title":"Environment variables to configure otelsdk — Environment Variables","text":"(1) otel::as_attributes().","code":""},{"path":[]},{"path":"https://otelsdk.r-lib.org/reference/environmentvariables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Environment variables to configure otelsdk — Environment Variables","text":"","code":"# To start an R session using the OTLP exporter: # OTEL_TRACES_EXPORTER=http R -q -f script.R"},{"path":"https://otelsdk.r-lib.org/reference/filesizeoptions.html","id":null,"dir":"Reference","previous_headings":"","what":"File Size Options — File Size Options","title":"File Size Options — File Size Options","text":"otel otelsdk accept file size options following format: positive numeric scalar, interpreted number bytes. string scalar positive number unit suffix. Possible units: B, KB, KiB, MB, MiB, GB, GiB, TB, TiB, PB, PiB. Units case insensitive.","code":""},{"path":"https://otelsdk.r-lib.org/reference/filesizeoptions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"File Size Options — File Size Options","text":"applicable.","code":""},{"path":"https://otelsdk.r-lib.org/reference/filesizeoptions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"File Size Options — File Size Options","text":"","code":"# Maximum output file size is 128 MiB: # OTEL_EXPORTER_OTLP_FILE_FILE_SIZE=128MiB"},{"path":"https://otelsdk.r-lib.org/reference/logger_provider_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Logger provider to write log messages into a JSONL file. — logger_provider_file","title":"Logger provider to write log messages into a JSONL file. — logger_provider_file","text":"OTLP file exporter. writes logs JSONL file, log line file, valid JSON value. line separator \\n. preferred file extension jsonl. Select tracer provider OTEL_LOGS_EXPORTER=otlp/file.","code":""},{"path":"https://otelsdk.r-lib.org/reference/logger_provider_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Logger provider to write log messages into a JSONL file. — logger_provider_file","text":"logger_provider_file$new() returns otel::otel_logger_provider object. logger_provider_file$options() returns named list, current values options.","code":""},{"path":"https://otelsdk.r-lib.org/reference/logger_provider_file.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Logger provider to write log messages into a JSONL file. — logger_provider_file","text":"Externally:   R:","code":"OTEL_LOGS_EXPORTER=otlp/file logger_provider_file$new(opts = NULL) logger_provider_file$options()"},{"path":"https://otelsdk.r-lib.org/reference/logger_provider_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Logger provider to write log messages into a JSONL file. — logger_provider_file","text":"opts: Named list options. See .","code":""},{"path":[]},{"path":"https://otelsdk.r-lib.org/reference/logger_provider_file.html","id":"file-exporter-options","dir":"Reference","previous_headings":"","what":"File exporter options","title":"Logger provider to write log messages into a JSONL file. — logger_provider_file","text":"file_pattern: Output file pattern. Value set : opts argument, OTEL_EXPORTER_OTLP_LOGS_FILE environment variable, OTEL_EXPORTER_OTLP_FILE environment variable, default : logs-%N.jsonl. May contain placeholders, see . alias_pattern: file always point latest file. Value set : opts argument, OTEL_EXPORTER_OTLP_LOGS_FILE_ALIAS environment variable, OTEL_EXPORTER_OTLP_FILE_ALIAS environment variable, default : logs-latest.jsonl. May contain placeholders, see . flush_interval: Interval force flush output. time interval specification, see Time Interval Options. Value set opts argument, OTEL_EXPORTER_OTLP_LOGS_FILE_FLUSH_INTERVAL environment variable, OTEL_EXPORTER_OTLP_FILE_FLUSH_INTERVAL environment variable, default 30s, thirty seconds. flush_count: Force flush output every flush_count records. Value set opts argument, OTEL_EXPORTER_OTLP_LOGS_FILE_FLUSH_COUNT environment variable, OTEL_EXPORTER_OTLP_FILE_FLUSH_COUNT environment variable, default 256. file_size: File size rotate output files. file size specification, see File Size Options. Value set opts argument, OTEL_EXPORTER_OTLP_LOGS_FILE_FILE_SIZE environment variable, OTEL_EXPORTER_OTLP_FILE_FILE_SIZE environment variable, default 20MB. rotate_size: many rotated output files keep. Value set opts argument, OTEL_EXPORTER_OTLP_LOGS_FILE_ROTATE_SIZE environment variable, OTEL_EXPORTER_OTLP_FILE_ROTATE_SIZE environment variable, default 10. Special placeholders available file_pattern alias_pattern: %Y: Writes year 4 digit decimal number. %y: Writes last 2 digits year decimal number (range [00,99]). %m: Writes month decimal number (range [01,12]). %j: Writes day year decimal number (range [001,366]). %d: Writes day month decimal number (range [01,31]). %w: Writes weekday decimal number, Sunday 0 (range [0-6]). %H: Writes hour decimal number, 24 hour clock (range [00-23]). %: Writes hour decimal number, 12 hour clock (range [01,12]). %M: Writes minute decimal number (range [00,59]). %S: Writes second decimal number (range [00,60]). %F: Equivalent %Y-%m-%d (ISO 8601 date format). %T: Equivalent %H:%M:%S (ISO 8601 time format). %R: Equivalent %H:%M. %N: Rotate index, start 0. %n: Rotate index, start 1.","code":""},{"path":"https://otelsdk.r-lib.org/reference/logger_provider_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Logger provider to write log messages into a JSONL file. — logger_provider_file","text":"","code":"logger_provider_file$options() #> $file_pattern #> [1] \"logs-%N.jsonl\" #>  #> $alias_pattern #> [1] \"logs-latest.jsonl\" #>  #> $flush_interval #> [1] 30 #>  #> $flush_count #> [1] 256 #>  #> $file_size #> [1] 20971520 #>  #> $rotate_size #> [1] 10 #>"},{"path":"https://otelsdk.r-lib.org/reference/logger_provider_http.html","id":null,"dir":"Reference","previous_headings":"","what":"Logger provider to log over HTTP — logger_provider_http","title":"Logger provider to log over HTTP — logger_provider_http","text":"OTLP HTTP exporter.","code":""},{"path":"https://otelsdk.r-lib.org/reference/logger_provider_http.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Logger provider to log over HTTP — logger_provider_http","text":"logger_provider_http$new() returns otel::otel_logger_provider object. logger_provider_http$options() returns named list, current values options.","code":""},{"path":"https://otelsdk.r-lib.org/reference/logger_provider_http.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Logger provider to log over HTTP — logger_provider_http","text":"Externally:   R:","code":"OTEL_LOGS_EXPORTER=otlp logger_provider_http$new(opts = NULL) logger_provider_http$options()"},{"path":"https://otelsdk.r-lib.org/reference/logger_provider_http.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Logger provider to log over HTTP — logger_provider_http","text":"opts: Named list options. See .","code":""},{"path":[]},{"path":"https://otelsdk.r-lib.org/reference/logger_provider_http.html","id":"http-exporter-options","dir":"Reference","previous_headings":"","what":"HTTP exporter options","title":"Logger provider to log over HTTP — logger_provider_http","text":"url: OTLP URL send telemetry data . Value set opts argument, needs point logs endpoint, OTEL_EXPORTER_OTLP_LOGS_ENDPOINT environment variable, needs point logs endpoint, OTEL_EXPORTER_OTLP_ENDPOINT environment variable + /v1/logs, default http://localhost:4318/v1/logs. content_type: data format used, JSON binary. Possible values: \"http/json\", \"http/protobuf\". Value set opts argument, OTEL_EXPORTER_OTLP_LOGS_PROTOCOL environment variable, OTEL_EXPORTER_OTLP_PROTOCOL environment variable, default \"http/protobuf\". json_bytes_mapping: encoding used trace id span id. Possible values: \"hexid\", \"base64\", \"hex\". Value set opts argument, OTEL_R_EXPORTER_OTLP_LOGS_JSON_BYTES_MAPPING environment variable, OTEL_R_EXPORTER_OTLP_JSON_BYTES_MAPPING environment variable, default \"hexid\". use_json_name: whether use json name protobuf field set key json. flag. Value set opts argument, OTEL_R_EXPORTER_OTLP_LOGS_USE_JSON_NAME environment variable, OTEL_R_EXPORTER_OTLP_USE_JSON_NAME environment variable, default FALSE. console_debug: whether print debug messages console. Value set opts argument, OTEL_R_EXPORTER_OTLP_LOGS_CONSOLE_DEBUG environment variable, OTEL_R_EXPORTER_OTLP_CONSOLE_DEBUG environment variable, default FALSE. timeout: HTTP timeout milliseconds. Value set opts argument, OTEL_EXPORTER_OTLP_LOGS_TIMEOUT} environment variable, OTEL_EXPORTER_OTLP_TIMEOUT environment variable, default 10000. http_headers: additional HTTP headers send, e.g. Authorization commonly used. named character vector without NA values. Value set opts argument, OTEL_EXPORTER_OTLP_LOGS_HEADERS environment variable, OTEL_EXPORTER_OTLP_HEADERS environment variable, default empty named character vector. specified environment variables, must comma separated list headers, header=value form. ssl_insecure_skip_verify: whether disable SSL. Value set opts argument, OTEL_R_EXPORTER_OTLP_LOGS_SSL_INSECURE_SKIP_VERIFY environment variable, OTEL_R_EXPORTER_OTLP_SSL_INSECURE_SKIP_VERIFY environment variable, default FALSE. ssl_ca_cert_path: CA certificate, path file. Empty string uses system default. Value set opts argument, OTEL_EXPORTER_OTLP_LOGS_CERTIFICATE environment variable, OTEL_EXPORTER_OTLP_CERTIFICATE environment variable, default “. ssl_ca_cert_string: CA certificate, string. Empty string uses system default. Value set opts argument, OTEL_EXPORTER_OTLP_LOGS_CERTIFICATE_STRING environment variable, OTEL_EXPORTER_OTLP_CERTIFICATE_STRING environment variable, default “. ssl_client_key_path: SSL client key, path file. Empty string uses system default. Value set opts argument, OTEL_EXPORTER_OTLP_LOGS_CLIENT_KEY environment variable, OTEL_EXPORTER_OTLP_CLIENT_KEY environment variable, default “. ssl_client_key_string: SSL client key string. Empty string uses system default. Value set opts argument, OTEL_EXPORTER_OTLP_LOGS_CLIENT_KEY_STRING environment variable, OTEL_EXPORTER_OTLP_CLIENT_KEY_STRING environment variable, default “. ssl_client_cert_path: SSL client certificate, path file. Empty string uses system default. Value set opts argument, OTEL_EXPORTER_OTLP_LOGS_CLIENT_CERTIFICATE environment variable, OTEL_EXPORTER_OTLP_CLIENT_CERTIFICATE environment variable, default “. ssl_client_cert_string: SSL client certificate, string. Empty string uses system default. Value set opts argument, OTEL_EXPORTER_OTLP_LOGS_CLIENT_CERTIFICATE_STRING environment variable, OTEL_EXPORTER_OTLP_CLIENT_CERTIFICATE_STRING environment variable, default “. ssl_min_tls: minimum TLS version. Empty string uses system default. Value set opts argument, OTEL_R_EXPORTER_OTLP_LOGS_SSL_MIN_TLS environment variable, OTEL_R_EXPORTER_OTLP_SSL_MIN_TLS environment variable, default “. ssl_max_tls: maximum TLS version. Empty string uses system default. Value set opts argument, OTEL_R_EXPORTER_OTLP_LOGS_SSL_MAX_TLS environment variable, OTEL_R_EXPORTER_OTLP_SSL_MAX_TLS environment variable, default “. ssl_cipher: TLS cipher. Empty string uses system default. Value set opts argument, OTEL_R_EXPORTER_OTLP_LOGS_SSL_CIPHER environment variable, OTEL_R_EXPORTER_OTLP_SSL_CIPHER environment variable, default “. ssl_cipher_suite: TLS cipher suite. Empty string uses system default. Value set opts argument, OTEL_R_EXPORTER_OTLP_LOGS_SSL_CIPHER_SUITE environment variable, OTEL_R_EXPORTER_OTLP_SSL_CIPHER_SUITE environment variable, default “. compression: compression use. Possible values \"none\", \"gzip\". Value set opts argument, OTEL_EXPORTER_OTLP_LOGS_COMPRESSION environment variable, OTEL_EXPORTER_OTLP_COMPRESSION environment variable, default none. retry_policy_max_attempts: maximum number call attempts, including original attempt. Value set opts argument, OTEL_R_EXPORTER_OTLP_LOGS_RETRY_POLICY_MAX_ATTEMPTS environment variable, OTEL_R_EXPORTER_OTLP_RETRY_POLICY_MAX_ATTEMPTS environment variable, default 5. retry_policy_initial_backoff: maximum initial back-delay retry attempts. actual backoff delay uniform random zero . Value set opts argument, OTEL_R_EXPORTER_OTLP_LOGS_RETRY_POLICY_INITIAL_BACKOFF environment variable, OTEL_R_EXPORTER_OTLP_RETRY_POLICY_INITIAL_BACKOFF environment variable, default 1000. retry_policy_max_backoff: maximum backoff places upper limit exponential backoff growth. Value set opts argument, OTEL_R_EXPORTER_OTLP_LOGS_RETRY_POLICY_MAX_BACKOFF environment variable, OTEL_R_EXPORTER_OTLP_RETRY_POLICY_MAX_BACKOFF environment variable, default 5000. retry_policy_backoff_multiplier: backoff multiplied value retry attempt. Value set opts argument, OTEL_R_EXPORTER_OTLP_LOGS_RETRY_POLICY_BACKOFF_MULTIPLIER environment variable, OTEL_R_EXPORTER_OTLP_RETRY_POLICY_BACKOFF_MULTIPLIER environment variable, default 1.5.","code":""},{"path":"https://otelsdk.r-lib.org/reference/logger_provider_http.html","id":"batch-processor-options","dir":"Reference","previous_headings":"","what":"Batch processor options","title":"Logger provider to log over HTTP — logger_provider_http","text":"max_queue_size: maximum buffer/queue size. size reached, spans dropped. Must positive. Value set opts argument, OTEL_BSP_MAX_QUEUE_SIZE environment variable, default 2048. max_export_batch_size: maximum batch size every export. must smaller equal max_queue_size. Must positive. Value set opts argument, OTEL_BSP_MAX_EXPORT_BATCH_SIZE environment variable, default 512. schedule_delay: time interval two consecutive exports, milliseconds. Value set opts argument` OTEL_BSP_SCHEDULE_DELAY environment variable, default 5000.","code":""},{"path":"https://otelsdk.r-lib.org/reference/logger_provider_http.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Logger provider to log over HTTP — logger_provider_http","text":"","code":"logger_provider_http$options() #> $url #> [1] \"http://localhost:4318/v1/logs\" #>  #> $content_type #> http/protobuf  #>             1  #>  #> $json_bytes_mapping #> [1] 0 #>  #> $use_json_name #> [1] FALSE #>  #> $console_debug #> [1] FALSE #>  #> $timeout #> [1] 10 #>  #> $http_headers #> named character(0) #>  #> $ssl_insecure_skip_verify #> [1] FALSE #>  #> $ssl_ca_cert_path #> [1] \"\" #>  #> $ssl_ca_cert_string #> [1] \"\" #>  #> $ssl_client_key_path #> [1] \"\" #>  #> $ssl_client_key_string #> [1] \"\" #>  #> $ssl_client_cert_path #> [1] \"\" #>  #> $ssl_client_cert_string #> [1] \"\" #>  #> $ssl_min_tls #> [1] \"\" #>  #> $ssl_max_tls #> [1] \"\" #>  #> $ssl_cipher #> [1] \"\" #>  #> $ssl_cipher_suite #> [1] \"\" #>  #> $compression #> [1] \"none\" #>  #> $retry_policy_max_attempts #> [1] 5 #>  #> $retry_policy_initial_backoff #> [1] 1000 #>  #> $retry_policy_max_backoff #> [1] 5000 #>  #> $retry_policy_backoff_multiplier #> [1] 1.5 #>  #> $max_queue_size #> [1] 2048 #>  #> $max_export_batch_size #> [1] 512 #>  #> $schedule_delay #> [1] 5000 #>"},{"path":"https://otelsdk.r-lib.org/reference/logger_provider_stdstream.html","id":null,"dir":"Reference","previous_headings":"","what":"Logger provider to write to the standard output or standard error or to a file — logger_provider_stdstream","title":"Logger provider to write to the standard output or standard error or to a file — logger_provider_stdstream","text":"Writes logs standard output error, file. Useful debugging.","code":""},{"path":"https://otelsdk.r-lib.org/reference/logger_provider_stdstream.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Logger provider to write to the standard output or standard error or to a file — logger_provider_stdstream","text":"logger_provider_stdstream$new() returns otel::otel_logger_provider object. logger_provider_stdstream$options() returns named list, current values options.","code":""},{"path":"https://otelsdk.r-lib.org/reference/logger_provider_stdstream.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Logger provider to write to the standard output or standard error or to a file — logger_provider_stdstream","text":"Externally:   R:","code":"OTEL_LOGS_EXPORTER=console OTEL_LOGS_EXPORTER=stderr logger_provider_stdstream$new(opts = NULL) logger_provider_stdstream$options()"},{"path":"https://otelsdk.r-lib.org/reference/logger_provider_stdstream.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Logger provider to write to the standard output or standard error or to a file — logger_provider_stdstream","text":"opts: Named list options. See .","code":""},{"path":[]},{"path":"https://otelsdk.r-lib.org/reference/logger_provider_stdstream.html","id":"standard-stream-exporter-options","dir":"Reference","previous_headings":"","what":"Standard stream exporter options","title":"Logger provider to write to the standard output or standard error or to a file — logger_provider_stdstream","text":"output: write output. Can \"stdout\": write output standard output, \"stderr\": write output standard error, another string: write output file. (write output file named \"stdout\" \"stderr\", use ./ prefix.) Value set opts argument, OTEL_R_EXPORTER_STDSTREAM_LOGS_OUTPUT environment variable, OTEL_R_EXPORTER_STDSTREAM_OUTPUT environment variable, default \"stdout\".","code":""},{"path":"https://otelsdk.r-lib.org/reference/logger_provider_stdstream.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Logger provider to write to the standard output or standard error or to a file — logger_provider_stdstream","text":"","code":"logger_provider_stdstream$options() #> $output #> [1] \"stdout\" #>"},{"path":"https://otelsdk.r-lib.org/reference/meter_provider_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Meter provider to collect metrics in JSONL files — meter_provider_file","title":"Meter provider to collect metrics in JSONL files — meter_provider_file","text":"OTLP file exporter. writes measurements JSONL file, measurement line file, valid JSON value. line separator \\n. preferred file extension jsonl. Select tracer provider OTEL_METRICS_EXPORTER=otlp/file.","code":""},{"path":"https://otelsdk.r-lib.org/reference/meter_provider_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Meter provider to collect metrics in JSONL files — meter_provider_file","text":"meter_provider_file$new() returns otel::otel_meter_provider object. meter_provider_file$options() returns named list, current values options.","code":""},{"path":"https://otelsdk.r-lib.org/reference/meter_provider_file.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Meter provider to collect metrics in JSONL files — meter_provider_file","text":"Externally:   R:","code":"OTEL_METRICS_EXPORTER=otlp/file meter_provider_file$new(opts = NULL) meter_provider_file$options()"},{"path":"https://otelsdk.r-lib.org/reference/meter_provider_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Meter provider to collect metrics in JSONL files — meter_provider_file","text":"opts: Named list options. See .","code":""},{"path":[]},{"path":"https://otelsdk.r-lib.org/reference/meter_provider_file.html","id":"file-exporter-options","dir":"Reference","previous_headings":"","what":"File exporter options","title":"Meter provider to collect metrics in JSONL files — meter_provider_file","text":"file_pattern: Output file pattern. Value set : opts argument, OTEL_EXPORTER_OTLP_METRICS_FILE environment variable, OTEL_EXPORTER_OTLP_FILE environment variable, default : metrics-%N.jsonl. May contain placeholders, see . alias_pattern: file always point latest file. Value set : opts argument, OTEL_EXPORTER_OTLP_METRICS_FILE_ALIAS environment variable, OTEL_EXPORTER_OTLP_FILE_ALIAS environment variable, default : metrics-latest.jsonl. May contain placeholders, see . flush_interval: Interval force flush output. time interval specification, see Time Interval Options. Value set opts argument, OTEL_EXPORTER_OTLP_METRICS_FILE_FLUSH_INTERVAL environment variable, OTEL_EXPORTER_OTLP_FILE_FLUSH_INTERVAL environment variable, default 30s, thirty seconds. flush_count: Force flush output every flush_count records. Value set opts argument, OTEL_EXPORTER_OTLP_METRICS_FILE_FLUSH_COUNT environment variable, OTEL_EXPORTER_OTLP_FILE_FLUSH_COUNT environment variable, default 256. file_size: File size rotate output files. file size specification, see File Size Options. Value set opts argument, OTEL_EXPORTER_OTLP_METRICS_FILE_FILE_SIZE environment variable, OTEL_EXPORTER_OTLP_FILE_FILE_SIZE environment variable, default 20MB. rotate_size: many rotated output files keep. Value set opts argument, OTEL_EXPORTER_OTLP_METRICS_FILE_ROTATE_SIZE environment variable, OTEL_EXPORTER_OTLP_FILE_ROTATE_SIZE environment variable, default 10. Special placeholders available file_pattern alias_pattern: %Y: Writes year 4 digit decimal number. %y: Writes last 2 digits year decimal number (range [00,99]). %m: Writes month decimal number (range [01,12]). %j: Writes day year decimal number (range [001,366]). %d: Writes day month decimal number (range [01,31]). %w: Writes weekday decimal number, Sunday 0 (range [0-6]). %H: Writes hour decimal number, 24 hour clock (range [00-23]). %: Writes hour decimal number, 12 hour clock (range [01,12]). %M: Writes minute decimal number (range [00,59]). %S: Writes second decimal number (range [00,60]). %F: Equivalent %Y-%m-%d (ISO 8601 date format). %T: Equivalent %H:%M:%S (ISO 8601 time format). %R: Equivalent %H:%M. %N: Rotate index, start 0. %n: Rotate index, start 1.","code":""},{"path":"https://otelsdk.r-lib.org/reference/meter_provider_file.html","id":"metric-reader-options","dir":"Reference","previous_headings":"","what":"Metric reader options","title":"Meter provider to collect metrics in JSONL files — meter_provider_file","text":"export_interval: time interval start two export attempts, milliseconds. Value set opts argument, OTEL_METRIC_EXPORT_INTERVAL environment variable, default 60000. export_timeout: Maximum allowed time export data, milliseconds. Value set opts argument, OTEL_METRIC_EXPORT_TIMEOUT environment variable, default 30000.","code":""},{"path":"https://otelsdk.r-lib.org/reference/meter_provider_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Meter provider to collect metrics in JSONL files — meter_provider_file","text":"","code":"meter_provider_file$options() #> $export_interval #> [1] 60000 #>  #> $export_timeout #> [1] 30000 #>  #> $file_pattern #> [1] \"metrics-%N.jsonl\" #>  #> $alias_pattern #> [1] \"metrics-latest.jsonl\" #>  #> $flush_interval #> [1] 30 #>  #> $flush_count #> [1] 256 #>  #> $file_size #> [1] 20971520 #>  #> $rotate_size #> [1] 10 #>"},{"path":"https://otelsdk.r-lib.org/reference/meter_provider_http.html","id":null,"dir":"Reference","previous_headings":"","what":"Meter provider to send collected metrics over HTTP — meter_provider_http","title":"Meter provider to send collected metrics over HTTP — meter_provider_http","text":"OTLP HTTP exporter. Select tracer provider OTEL_METRICS_EXPORTER=otlp.","code":""},{"path":"https://otelsdk.r-lib.org/reference/meter_provider_http.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Meter provider to send collected metrics over HTTP — meter_provider_http","text":"meter_provider_http$new() returns otel::otel_meter_provider object. meter_provider_http$options() returns named list, current values options.","code":""},{"path":"https://otelsdk.r-lib.org/reference/meter_provider_http.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Meter provider to send collected metrics over HTTP — meter_provider_http","text":"Externally:   R:","code":"OTEL_METRICS_EXPORTER=otlp meter_provider_http$new(opts = NULL) meter_provider_http$options()"},{"path":"https://otelsdk.r-lib.org/reference/meter_provider_http.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Meter provider to send collected metrics over HTTP — meter_provider_http","text":"opts: Named list options. See .","code":""},{"path":[]},{"path":"https://otelsdk.r-lib.org/reference/meter_provider_http.html","id":"http-exporter-options","dir":"Reference","previous_headings":"","what":"HTTP exporter options","title":"Meter provider to send collected metrics over HTTP — meter_provider_http","text":"url: OTLP URL send telemetry data . Value set opts argument, needs point metrics endpoint, OTEL_EXPORTER_OTLP_METRICS_ENDPOINT environment variable, needs point metrics endpoint, OTEL_EXPORTER_OTLP_ENDPOINT environment variable + /v1/metrics, default http://localhost:4318/v1/metrics. content_type: data format used, JSON binary. Possible values: \"http/json\", \"http/protobuf\". Value set opts argument, OTEL_EXPORTER_OTLP_METRICS_PROTOCOL environment variable, OTEL_EXPORTER_OTLP_PROTOCOL environment variable, default \"http/protobuf\". json_bytes_mapping: encoding used trace id span id. Possible values: \"hexid\", \"base64\", \"hex\". Value set opts argument, OTEL_R_EXPORTER_OTLP_METRICS_JSON_BYTES_MAPPING environment variable, OTEL_R_EXPORTER_OTLP_JSON_BYTES_MAPPING environment variable, default \"hexid\". use_json_name: whether use json name protobuf field set key json. flag. Value set opts argument, OTEL_R_EXPORTER_OTLP_METRICS_USE_JSON_NAME environment variable, OTEL_R_EXPORTER_OTLP_USE_JSON_NAME environment variable, default FALSE. console_debug: whether print debug messages console. Value set opts argument, OTEL_R_EXPORTER_OTLP_METRICS_CONSOLE_DEBUG environment variable, OTEL_R_EXPORTER_OTLP_CONSOLE_DEBUG environment variable, default FALSE. timeout: HTTP timeout milliseconds. Value set opts argument, OTEL_EXPORTER_OTLP_METRICS_TIMEOUT} environment variable, OTEL_EXPORTER_OTLP_TIMEOUT environment variable, default 10000. http_headers: additional HTTP headers send, e.g. Authorization commonly used. named character vector without NA values. Value set opts argument, OTEL_EXPORTER_OTLP_METRICS_HEADERS environment variable, OTEL_EXPORTER_OTLP_HEADERS environment variable, default empty named character vector. specified environment variables, must comma separated list headers, header=value form. ssl_insecure_skip_verify: whether disable SSL. Value set opts argument, OTEL_R_EXPORTER_OTLP_METRICS_SSL_INSECURE_SKIP_VERIFY environment variable, OTEL_R_EXPORTER_OTLP_SSL_INSECURE_SKIP_VERIFY environment variable, default FALSE. ssl_ca_cert_path: CA certificate, path file. Empty string uses system default. Value set opts argument, OTEL_EXPORTER_OTLP_METRICS_CERTIFICATE environment variable, OTEL_EXPORTER_OTLP_CERTIFICATE environment variable, default “. ssl_ca_cert_string: CA certificate, string. Empty string uses system default. Value set opts argument, OTEL_EXPORTER_OTLP_METRICS_CERTIFICATE_STRING environment variable, OTEL_EXPORTER_OTLP_CERTIFICATE_STRING environment variable, default “. ssl_client_key_path: SSL client key, path file. Empty string uses system default. Value set opts argument, OTEL_EXPORTER_OTLP_METRICS_CLIENT_KEY environment variable, OTEL_EXPORTER_OTLP_CLIENT_KEY environment variable, default “. ssl_client_key_string: SSL client key string. Empty string uses system default. Value set opts argument, OTEL_EXPORTER_OTLP_METRICS_CLIENT_KEY_STRING environment variable, OTEL_EXPORTER_OTLP_CLIENT_KEY_STRING environment variable, default “. ssl_client_cert_path: SSL client certificate, path file. Empty string uses system default. Value set opts argument, OTEL_EXPORTER_OTLP_METRICS_CLIENT_CERTIFICATE environment variable, OTEL_EXPORTER_OTLP_CLIENT_CERTIFICATE environment variable, default “. ssl_client_cert_string: SSL client certificate, string. Empty string uses system default. Value set opts argument, OTEL_EXPORTER_OTLP_METRICS_CLIENT_CERTIFICATE_STRING environment variable, OTEL_EXPORTER_OTLP_CLIENT_CERTIFICATE_STRING environment variable, default “. ssl_min_tls: minimum TLS version. Empty string uses system default. Value set opts argument, OTEL_R_EXPORTER_OTLP_METRICS_SSL_MIN_TLS environment variable, OTEL_R_EXPORTER_OTLP_SSL_MIN_TLS environment variable, default “. ssl_max_tls: maximum TLS version. Empty string uses system default. Value set opts argument, OTEL_R_EXPORTER_OTLP_METRICS_SSL_MAX_TLS environment variable, OTEL_R_EXPORTER_OTLP_SSL_MAX_TLS environment variable, default “. ssl_cipher: TLS cipher. Empty string uses system default. Value set opts argument, OTEL_R_EXPORTER_OTLP_METRICS_SSL_CIPHER environment variable, OTEL_R_EXPORTER_OTLP_SSL_CIPHER environment variable, default “. ssl_cipher_suite: TLS cipher suite. Empty string uses system default. Value set opts argument, OTEL_R_EXPORTER_OTLP_METRICS_SSL_CIPHER_SUITE environment variable, OTEL_R_EXPORTER_OTLP_SSL_CIPHER_SUITE environment variable, default “. compression: compression use. Possible values \"none\", \"gzip\". Value set opts argument, OTEL_EXPORTER_OTLP_METRICS_COMPRESSION environment variable, OTEL_EXPORTER_OTLP_COMPRESSION environment variable, default none. retry_policy_max_attempts: maximum number call attempts, including original attempt. Value set opts argument, OTEL_R_EXPORTER_OTLP_METRICS_RETRY_POLICY_MAX_ATTEMPTS environment variable, OTEL_R_EXPORTER_OTLP_RETRY_POLICY_MAX_ATTEMPTS environment variable, default 5. retry_policy_initial_backoff: maximum initial back-delay retry attempts. actual backoff delay uniform random zero . Value set opts argument, OTEL_R_EXPORTER_OTLP_METRICS_RETRY_POLICY_INITIAL_BACKOFF environment variable, OTEL_R_EXPORTER_OTLP_RETRY_POLICY_INITIAL_BACKOFF environment variable, default 1000. retry_policy_max_backoff: maximum backoff places upper limit exponential backoff growth. Value set opts argument, OTEL_R_EXPORTER_OTLP_METRICS_RETRY_POLICY_MAX_BACKOFF environment variable, OTEL_R_EXPORTER_OTLP_RETRY_POLICY_MAX_BACKOFF environment variable, default 5000. retry_policy_backoff_multiplier: backoff multiplied value retry attempt. Value set opts argument, OTEL_R_EXPORTER_OTLP_METRICS_RETRY_POLICY_BACKOFF_MULTIPLIER environment variable, OTEL_R_EXPORTER_OTLP_RETRY_POLICY_BACKOFF_MULTIPLIER environment variable, default 1.5.","code":""},{"path":"https://otelsdk.r-lib.org/reference/meter_provider_http.html","id":"metric-reader-options","dir":"Reference","previous_headings":"","what":"Metric reader options","title":"Meter provider to send collected metrics over HTTP — meter_provider_http","text":"export_interval: time interval start two export attempts, milliseconds. Value set opts argument, OTEL_METRIC_EXPORT_INTERVAL environment variable, default 60000. export_timeout: Maximum allowed time export data, milliseconds. Value set opts argument, OTEL_METRIC_EXPORT_TIMEOUT environment variable, default 30000.","code":""},{"path":"https://otelsdk.r-lib.org/reference/meter_provider_http.html","id":"metric-exporter-options","dir":"Reference","previous_headings":"","what":"Metric exporter options","title":"Meter provider to send collected metrics over HTTP — meter_provider_http","text":"aggregation_temporality: possible values: \"unspecified\", \"delta\", \"cumulative\", \"lowmemory\". See OpenTelemetry data model. Value set opts argument, OTEL_R_EXPORTER_OTLP_AGGREGATION_TEMPORALITY environment variable, default \"cumulative\".","code":""},{"path":"https://otelsdk.r-lib.org/reference/meter_provider_http.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Meter provider to send collected metrics over HTTP — meter_provider_http","text":"","code":"meter_provider_http$options() #> $url #> [1] \"http://localhost:4318/v1/metrics\" #>  #> $content_type #> http/protobuf  #>             1  #>  #> $json_bytes_mapping #> [1] 0 #>  #> $use_json_name #> [1] FALSE #>  #> $console_debug #> [1] FALSE #>  #> $timeout #> [1] 10 #>  #> $http_headers #> named character(0) #>  #> $ssl_insecure_skip_verify #> [1] FALSE #>  #> $ssl_ca_cert_path #> [1] \"\" #>  #> $ssl_ca_cert_string #> [1] \"\" #>  #> $ssl_client_key_path #> [1] \"\" #>  #> $ssl_client_key_string #> [1] \"\" #>  #> $ssl_client_cert_path #> [1] \"\" #>  #> $ssl_client_cert_string #> [1] \"\" #>  #> $ssl_min_tls #> [1] \"\" #>  #> $ssl_max_tls #> [1] \"\" #>  #> $ssl_cipher #> [1] \"\" #>  #> $ssl_cipher_suite #> [1] \"\" #>  #> $compression #> [1] \"none\" #>  #> $retry_policy_max_attempts #> [1] 5 #>  #> $retry_policy_initial_backoff #> [1] 1000 #>  #> $retry_policy_max_backoff #> [1] 5000 #>  #> $retry_policy_backoff_multiplier #> [1] 1.5 #>  #> $export_interval #> [1] 60000 #>  #> $export_timeout #> [1] 30000 #>  #> $aggregation_temporality #> cumulative  #>          2  #>"},{"path":"https://otelsdk.r-lib.org/reference/meter_provider_memory.html","id":null,"dir":"Reference","previous_headings":"","what":"In-memory meter provider for testing — meter_provider_memory","title":"In-memory meter provider for testing — meter_provider_memory","text":"Collects metrics measurements memory. useful testing instrumented R package application. with_otel_record() uses meter provider. Use with_otel_record() tests record telemetry check correct.","code":""},{"path":"https://otelsdk.r-lib.org/reference/meter_provider_memory.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"In-memory meter provider for testing — meter_provider_memory","text":"meter_provider_memory$new() returns otel::otel_meter_provider object. mp$get_metrics() returns named list recorded metrics. meter_provider_memory$options() returns named list, current values options.","code":""},{"path":"https://otelsdk.r-lib.org/reference/meter_provider_memory.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"In-memory meter provider for testing — meter_provider_memory","text":"mp$get_metrics() erases internal buffer meter provider.","code":"mp <- meter_provider_memory$new(opts = NULL) mp$get_metrics() meter_provider_memory$options()"},{"path":"https://otelsdk.r-lib.org/reference/meter_provider_memory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"In-memory meter provider for testing — meter_provider_memory","text":"opts: Named list options. See .","code":""},{"path":[]},{"path":"https://otelsdk.r-lib.org/reference/meter_provider_memory.html","id":"memory-exporter-options","dir":"Reference","previous_headings":"","what":"Memory exporter options","title":"In-memory meter provider for testing — meter_provider_memory","text":"buffer_size: buffer size, maximum number spans metrics measurements provider can record. Must positive. Value set opts argument, OTEL_R_EXPORTER_MEMORY_METRICS_BUFFER_SIZE environment variable, OTEL_R_EXPORTER_MEMORY_BUFFER_SIZE environment variable, default 100.","code":""},{"path":"https://otelsdk.r-lib.org/reference/meter_provider_memory.html","id":"metric-reader-options","dir":"Reference","previous_headings":"","what":"Metric reader options","title":"In-memory meter provider for testing — meter_provider_memory","text":"export_interval: time interval start two export attempts, milliseconds. Value set opts argument, OTEL_METRIC_EXPORT_INTERVAL environment variable, default 60000. export_timeout: Maximum allowed time export data, milliseconds. Value set opts argument, OTEL_METRIC_EXPORT_TIMEOUT environment variable, default 30000.","code":""},{"path":"https://otelsdk.r-lib.org/reference/meter_provider_memory.html","id":"metric-exporter-options","dir":"Reference","previous_headings":"","what":"Metric exporter options","title":"In-memory meter provider for testing — meter_provider_memory","text":"aggregation_temporality: possible values: \"unspecified\", \"delta\", \"cumulative\", \"lowmemory\". See OpenTelemetry data model. Value set opts argument, OTEL_R_EXPORTER_OTLP_AGGREGATION_TEMPORALITY environment variable, default \"cumulative\".","code":""},{"path":"https://otelsdk.r-lib.org/reference/meter_provider_memory.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"In-memory meter provider for testing — meter_provider_memory","text":"","code":"meter_provider_memory$options() #> $buffer_size #> [1] 100 #>  #> $export_interval #> [1] 60000 #>  #> $export_timeout #> [1] 30000 #>  #> $aggregation_temporality #> cumulative  #>          2  #>"},{"path":"https://otelsdk.r-lib.org/reference/meter_provider_stdstream.html","id":null,"dir":"Reference","previous_headings":"","what":"Meter provider to write to the standard output or standard error or to a file — meter_provider_stdstream","title":"Meter provider to write to the standard output or standard error or to a file — meter_provider_stdstream","text":"Writes metrics measurements standard output error, file. Useful debugging.","code":""},{"path":"https://otelsdk.r-lib.org/reference/meter_provider_stdstream.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Meter provider to write to the standard output or standard error or to a file — meter_provider_stdstream","text":"meter_provider_stdstream$new() returns otel::otel_meter_provider object. meter_provider_stdstream$options() returns named list, current values options.","code":""},{"path":"https://otelsdk.r-lib.org/reference/meter_provider_stdstream.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Meter provider to write to the standard output or standard error or to a file — meter_provider_stdstream","text":"Externally:   R:","code":"OTEL_METRICS_EXPORTER=console OTEL_METRICS_EXPORTER=stderr meter_provider_stdstream$new(opts = NULL) meter_provider_stdstream$options()"},{"path":"https://otelsdk.r-lib.org/reference/meter_provider_stdstream.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Meter provider to write to the standard output or standard error or to a file — meter_provider_stdstream","text":"opts: Named list options. See .","code":""},{"path":[]},{"path":"https://otelsdk.r-lib.org/reference/meter_provider_stdstream.html","id":"standard-stream-exporter-options","dir":"Reference","previous_headings":"","what":"Standard stream exporter options","title":"Meter provider to write to the standard output or standard error or to a file — meter_provider_stdstream","text":"output: write output. Can \"stdout\": write output standard output, \"stderr\": write output standard error, another string: write output file. (write output file named \"stdout\" \"stderr\", use ./ prefix.) Value set opts argument, OTEL_R_EXPORTER_STDSTREAM_METRICS_OUTPUT environment variable, OTEL_R_EXPORTER_STDSTREAM_OUTPUT environment variable, default \"stdout\".","code":""},{"path":"https://otelsdk.r-lib.org/reference/meter_provider_stdstream.html","id":"metric-reader-options","dir":"Reference","previous_headings":"","what":"Metric reader options","title":"Meter provider to write to the standard output or standard error or to a file — meter_provider_stdstream","text":"export_interval: time interval start two export attempts, milliseconds. Value set opts argument, OTEL_METRIC_EXPORT_INTERVAL environment variable, default 60000. export_timeout: Maximum allowed time export data, milliseconds. Value set opts argument, OTEL_METRIC_EXPORT_TIMEOUT environment variable, default 30000.","code":""},{"path":"https://otelsdk.r-lib.org/reference/meter_provider_stdstream.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Meter provider to write to the standard output or standard error or to a file — meter_provider_stdstream","text":"","code":"meter_provider_stdstream$options() #> $output #> [1] \"stdout\" #>  #> $export_interval #> [1] 60000 #>  #> $export_timeout #> [1] 30000 #>"},{"path":"https://otelsdk.r-lib.org/reference/otelsdk-package.html","id":null,"dir":"Reference","previous_headings":"","what":"otelsdk: 'R' 'SDK' and Exporters for 'OpenTelemetry' — otelsdk-package","title":"otelsdk: 'R' 'SDK' and Exporters for 'OpenTelemetry' — otelsdk-package","text":"'OpenTelemetry' collection tools, 'APIs', 'SDKs' used instrument, generate, collect, export telemetry data (metrics, logs, traces) analysis order understand software's performance behavior. package contains `OpenTelemetry' 'SDK', exporters. Use package export traces, metrics, logs instrumented 'R' code. Use 'otel' package instrument 'R' code 'OpenTelemetry'.","code":""},{"path":"https://otelsdk.r-lib.org/reference/otelsdk-package.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"otelsdk: 'R' 'SDK' and Exporters for 'OpenTelemetry' — otelsdk-package","text":"applicable.","code":""},{"path":[]},{"path":"https://otelsdk.r-lib.org/reference/otelsdk-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"otelsdk: 'R' 'SDK' and Exporters for 'OpenTelemetry' — otelsdk-package","text":"Maintainer: Gábor Csárdi csardi.gabor@gmail.com contributors: Posit Software, PBC (ROR) [copyright holder, funder] opentelemetry-cpp authors [contributor]","code":""},{"path":"https://otelsdk.r-lib.org/reference/otelsdk-package.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"otelsdk: 'R' 'SDK' and Exporters for 'OpenTelemetry' — otelsdk-package","text":"","code":"# Run your R script with OpenTelemetry tracing: # OTEL_TRACER_EXPORTER=otlp R -f myapp.R"},{"path":"https://otelsdk.r-lib.org/reference/timeintervaloptions.html","id":null,"dir":"Reference","previous_headings":"","what":"Time Interval Options — Time Interval Options","title":"Time Interval Options — Time Interval Options","text":"otel otelsdk accept time interval options following format: base::difftime object. positive numeric scalar, interpreted number milliseconds. may fractional. string scalar positive number time unit suffix. Possible time units: us (microseconds), ms (milliseconds), s (seconds), m (minutes), h (hours), d (days). time interval specified environment variable, may : positive number, interpreted number milliseconds. may fractional. positive number time unit suffix. Possible time units: us (microseconds), ms (milliseconds), s (seconds), m (minutes), h (hours), d (days).","code":""},{"path":"https://otelsdk.r-lib.org/reference/timeintervaloptions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Time Interval Options — Time Interval Options","text":"applicable.","code":""},{"path":"https://otelsdk.r-lib.org/reference/timeintervaloptions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Time Interval Options — Time Interval Options","text":"","code":"# Write pending telemetry data to the output file every 5 seconds: # OTEL_EXPORTER_OTLP_FILE_FLUSH_INTERVAL=5s"},{"path":"https://otelsdk.r-lib.org/reference/tracer_provider_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Tracer provider to write traces into a JSONL file — tracer_provider_file","title":"Tracer provider to write traces into a JSONL file — tracer_provider_file","text":"OTLP file exporter. writes spans JSONL file, span line file, valid JSON value. line separator \\n. preferred file extension jsonl. Select tracer provider OTEL_TRACES_EXPORTER=otlp/file.","code":""},{"path":"https://otelsdk.r-lib.org/reference/tracer_provider_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tracer provider to write traces into a JSONL file — tracer_provider_file","text":"tracer_provider_file$new() returns otel::otel_tracer_provider object. tracer_provider_file$options() returns named list, current values options.","code":""},{"path":"https://otelsdk.r-lib.org/reference/tracer_provider_file.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tracer provider to write traces into a JSONL file — tracer_provider_file","text":"Externally:   R:","code":"OTEL_TRACES_EXPORTER=otlp/file tracer_provider_file$new(opts = NULL) tracer_provider_file$options()"},{"path":"https://otelsdk.r-lib.org/reference/tracer_provider_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tracer provider to write traces into a JSONL file — tracer_provider_file","text":"opts: Named list options. See .","code":""},{"path":[]},{"path":"https://otelsdk.r-lib.org/reference/tracer_provider_file.html","id":"file-exporter-options","dir":"Reference","previous_headings":"","what":"File exporter options","title":"Tracer provider to write traces into a JSONL file — tracer_provider_file","text":"file_pattern: Output file pattern. Value set : opts argument, OTEL_EXPORTER_OTLP_TRACES_FILE environment variable, OTEL_EXPORTER_OTLP_FILE environment variable, default : trace-%N.jsonl. May contain placeholders, see . alias_pattern: file always point latest file. Value set : opts argument, OTEL_EXPORTER_OTLP_TRACES_FILE_ALIAS environment variable, OTEL_EXPORTER_OTLP_FILE_ALIAS environment variable, default : trace-latest.jsonl. May contain placeholders, see . flush_interval: Interval force flush output. time interval specification, see Time Interval Options. Value set opts argument, OTEL_EXPORTER_OTLP_TRACES_FILE_FLUSH_INTERVAL environment variable, OTEL_EXPORTER_OTLP_FILE_FLUSH_INTERVAL environment variable, default 30s, thirty seconds. flush_count: Force flush output every flush_count records. Value set opts argument, OTEL_EXPORTER_OTLP_TRACES_FILE_FLUSH_COUNT environment variable, OTEL_EXPORTER_OTLP_FILE_FLUSH_COUNT environment variable, default 256. file_size: File size rotate output files. file size specification, see File Size Options. Value set opts argument, OTEL_EXPORTER_OTLP_TRACES_FILE_FILE_SIZE environment variable, OTEL_EXPORTER_OTLP_FILE_FILE_SIZE environment variable, default 20MB. rotate_size: many rotated output files keep. Value set opts argument, OTEL_EXPORTER_OTLP_TRACES_FILE_ROTATE_SIZE environment variable, OTEL_EXPORTER_OTLP_FILE_ROTATE_SIZE environment variable, default 10. Special placeholders available file_pattern alias_pattern: %Y: Writes year 4 digit decimal number. %y: Writes last 2 digits year decimal number (range [00,99]). %m: Writes month decimal number (range [01,12]). %j: Writes day year decimal number (range [001,366]). %d: Writes day month decimal number (range [01,31]). %w: Writes weekday decimal number, Sunday 0 (range [0-6]). %H: Writes hour decimal number, 24 hour clock (range [00-23]). %: Writes hour decimal number, 12 hour clock (range [01,12]). %M: Writes minute decimal number (range [00,59]). %S: Writes second decimal number (range [00,60]). %F: Equivalent %Y-%m-%d (ISO 8601 date format). %T: Equivalent %H:%M:%S (ISO 8601 time format). %R: Equivalent %H:%M. %N: Rotate index, start 0. %n: Rotate index, start 1.","code":""},{"path":"https://otelsdk.r-lib.org/reference/tracer_provider_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tracer provider to write traces into a JSONL file — tracer_provider_file","text":"","code":"tracer_provider_file$options() #> $file_pattern #> [1] \"trace-%N.jsonl\" #>  #> $alias_pattern #> [1] \"trace-latest.jsonl\" #>  #> $flush_interval #> [1] 30 #>  #> $flush_count #> [1] 256 #>  #> $file_size #> [1] 20971520 #>  #> $rotate_size #> [1] 10 #>"},{"path":"https://otelsdk.r-lib.org/reference/tracer_provider_http.html","id":null,"dir":"Reference","previous_headings":"","what":"Tracer provider to export traces over HTTP — tracer_provider_http","title":"Tracer provider to export traces over HTTP — tracer_provider_http","text":"OTLP HTTP exporter. Select tracer provider OTEL_TRACES_EXPORTER=otlp.","code":""},{"path":"https://otelsdk.r-lib.org/reference/tracer_provider_http.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tracer provider to export traces over HTTP — tracer_provider_http","text":"tracer_provider_http$new() returns otel::otel_tracer_provider object. tracer_provider_http$options() returns named list, current values options.","code":""},{"path":"https://otelsdk.r-lib.org/reference/tracer_provider_http.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tracer provider to export traces over HTTP — tracer_provider_http","text":"Externally:   R:","code":"OTEL_TRACES_EXPORTER=otlp tracer_provider_http$new(opts = NULL) tracer_provider_http$options()"},{"path":"https://otelsdk.r-lib.org/reference/tracer_provider_http.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tracer provider to export traces over HTTP — tracer_provider_http","text":"opts: Named list options. See .","code":""},{"path":[]},{"path":"https://otelsdk.r-lib.org/reference/tracer_provider_http.html","id":"http-exporter-options","dir":"Reference","previous_headings":"","what":"HTTP exporter options","title":"Tracer provider to export traces over HTTP — tracer_provider_http","text":"url: OTLP URL send telemetry data . Value set opts argument, needs point traces endpoint, OTEL_EXPORTER_OTLP_TRACES_ENDPOINT environment variable, needs point traces endpoint, OTEL_EXPORTER_OTLP_ENDPOINT environment variable + /v1/traces, default http://localhost:4318/v1/traces. content_type: data format used, JSON binary. Possible values: \"http/json\", \"http/protobuf\". Value set opts argument, OTEL_EXPORTER_OTLP_TRACES_PROTOCOL environment variable, OTEL_EXPORTER_OTLP_PROTOCOL environment variable, default \"http/protobuf\". json_bytes_mapping: encoding used trace id span id. Possible values: \"hexid\", \"base64\", \"hex\". Value set opts argument, OTEL_R_EXPORTER_OTLP_TRACES_JSON_BYTES_MAPPING environment variable, OTEL_R_EXPORTER_OTLP_JSON_BYTES_MAPPING environment variable, default \"hexid\". use_json_name: whether use json name protobuf field set key json. flag. Value set opts argument, OTEL_R_EXPORTER_OTLP_TRACES_USE_JSON_NAME environment variable, OTEL_R_EXPORTER_OTLP_USE_JSON_NAME environment variable, default FALSE. console_debug: whether print debug messages console. Value set opts argument, OTEL_R_EXPORTER_OTLP_TRACES_CONSOLE_DEBUG environment variable, OTEL_R_EXPORTER_OTLP_CONSOLE_DEBUG environment variable, default FALSE. timeout: HTTP timeout milliseconds. Value set opts argument, OTEL_EXPORTER_OTLP_TRACES_TIMEOUT} environment variable, OTEL_EXPORTER_OTLP_TIMEOUT environment variable, default 10000. http_headers: additional HTTP headers send, e.g. Authorization commonly used. named character vector without NA values. Value set opts argument, OTEL_EXPORTER_OTLP_TRACES_HEADERS environment variable, OTEL_EXPORTER_OTLP_HEADERS environment variable, default empty named character vector. specified environment variables, must comma separated list headers, header=value form. ssl_insecure_skip_verify: whether disable SSL. Value set opts argument, OTEL_R_EXPORTER_OTLP_TRACES_SSL_INSECURE_SKIP_VERIFY environment variable, OTEL_R_EXPORTER_OTLP_SSL_INSECURE_SKIP_VERIFY environment variable, default FALSE. ssl_ca_cert_path: CA certificate, path file. Empty string uses system default. Value set opts argument, OTEL_EXPORTER_OTLP_TRACES_CERTIFICATE environment variable, OTEL_EXPORTER_OTLP_CERTIFICATE environment variable, default “. ssl_ca_cert_string: CA certificate, string. Empty string uses system default. Value set opts argument, OTEL_EXPORTER_OTLP_TRACES_CERTIFICATE_STRING environment variable, OTEL_EXPORTER_OTLP_CERTIFICATE_STRING environment variable, default “. ssl_client_key_path: SSL client key, path file. Empty string uses system default. Value set opts argument, OTEL_EXPORTER_OTLP_TRACES_CLIENT_KEY environment variable, OTEL_EXPORTER_OTLP_CLIENT_KEY environment variable, default “. ssl_client_key_string: SSL client key string. Empty string uses system default. Value set opts argument, OTEL_EXPORTER_OTLP_TRACES_CLIENT_KEY_STRING environment variable, OTEL_EXPORTER_OTLP_CLIENT_KEY_STRING environment variable, default “. ssl_client_cert_path: SSL client certificate, path file. Empty string uses system default. Value set opts argument, OTEL_EXPORTER_OTLP_TRACES_CLIENT_CERTIFICATE environment variable, OTEL_EXPORTER_OTLP_CLIENT_CERTIFICATE environment variable, default “. ssl_client_cert_string: SSL client certificate, string. Empty string uses system default. Value set opts argument, OTEL_EXPORTER_OTLP_TRACES_CLIENT_CERTIFICATE_STRING environment variable, OTEL_EXPORTER_OTLP_CLIENT_CERTIFICATE_STRING environment variable, default “. ssl_min_tls: minimum TLS version. Empty string uses system default. Value set opts argument, OTEL_R_EXPORTER_OTLP_TRACES_SSL_MIN_TLS environment variable, OTEL_R_EXPORTER_OTLP_SSL_MIN_TLS environment variable, default “. ssl_max_tls: maximum TLS version. Empty string uses system default. Value set opts argument, OTEL_R_EXPORTER_OTLP_TRACES_SSL_MAX_TLS environment variable, OTEL_R_EXPORTER_OTLP_SSL_MAX_TLS environment variable, default “. ssl_cipher: TLS cipher. Empty string uses system default. Value set opts argument, OTEL_R_EXPORTER_OTLP_TRACES_SSL_CIPHER environment variable, OTEL_R_EXPORTER_OTLP_SSL_CIPHER environment variable, default “. ssl_cipher_suite: TLS cipher suite. Empty string uses system default. Value set opts argument, OTEL_R_EXPORTER_OTLP_TRACES_SSL_CIPHER_SUITE environment variable, OTEL_R_EXPORTER_OTLP_SSL_CIPHER_SUITE environment variable, default “. compression: compression use. Possible values \"none\", \"gzip\". Value set opts argument, OTEL_EXPORTER_OTLP_TRACES_COMPRESSION environment variable, OTEL_EXPORTER_OTLP_COMPRESSION environment variable, default none. retry_policy_max_attempts: maximum number call attempts, including original attempt. Value set opts argument, OTEL_R_EXPORTER_OTLP_TRACES_RETRY_POLICY_MAX_ATTEMPTS environment variable, OTEL_R_EXPORTER_OTLP_RETRY_POLICY_MAX_ATTEMPTS environment variable, default 5. retry_policy_initial_backoff: maximum initial back-delay retry attempts. actual backoff delay uniform random zero . Value set opts argument, OTEL_R_EXPORTER_OTLP_TRACES_RETRY_POLICY_INITIAL_BACKOFF environment variable, OTEL_R_EXPORTER_OTLP_RETRY_POLICY_INITIAL_BACKOFF environment variable, default 1000. retry_policy_max_backoff: maximum backoff places upper limit exponential backoff growth. Value set opts argument, OTEL_R_EXPORTER_OTLP_TRACES_RETRY_POLICY_MAX_BACKOFF environment variable, OTEL_R_EXPORTER_OTLP_RETRY_POLICY_MAX_BACKOFF environment variable, default 5000. retry_policy_backoff_multiplier: backoff multiplied value retry attempt. Value set opts argument, OTEL_R_EXPORTER_OTLP_TRACES_RETRY_POLICY_BACKOFF_MULTIPLIER environment variable, OTEL_R_EXPORTER_OTLP_RETRY_POLICY_BACKOFF_MULTIPLIER environment variable, default 1.5.","code":""},{"path":"https://otelsdk.r-lib.org/reference/tracer_provider_http.html","id":"batch-processor-options","dir":"Reference","previous_headings":"","what":"Batch processor options","title":"Tracer provider to export traces over HTTP — tracer_provider_http","text":"max_queue_size: maximum buffer/queue size. size reached, spans dropped. Must positive. Value set opts argument, OTEL_BSP_MAX_QUEUE_SIZE environment variable, default 2048. max_export_batch_size: maximum batch size every export. must smaller equal max_queue_size. Must positive. Value set opts argument, OTEL_BSP_MAX_EXPORT_BATCH_SIZE environment variable, default 512. schedule_delay: time interval two consecutive exports, milliseconds. Value set opts argument` OTEL_BSP_SCHEDULE_DELAY environment variable, default 5000.","code":""},{"path":"https://otelsdk.r-lib.org/reference/tracer_provider_http.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tracer provider to export traces over HTTP — tracer_provider_http","text":"","code":"tracer_provider_http$options() #> $url #> [1] \"http://localhost:4318/v1/traces\" #>  #> $content_type #> http/protobuf  #>             1  #>  #> $json_bytes_mapping #> [1] 0 #>  #> $use_json_name #> [1] FALSE #>  #> $console_debug #> [1] FALSE #>  #> $timeout #> [1] 10 #>  #> $http_headers #> named character(0) #>  #> $ssl_insecure_skip_verify #> [1] FALSE #>  #> $ssl_ca_cert_path #> [1] \"\" #>  #> $ssl_ca_cert_string #> [1] \"\" #>  #> $ssl_client_key_path #> [1] \"\" #>  #> $ssl_client_key_string #> [1] \"\" #>  #> $ssl_client_cert_path #> [1] \"\" #>  #> $ssl_client_cert_string #> [1] \"\" #>  #> $ssl_min_tls #> [1] \"\" #>  #> $ssl_max_tls #> [1] \"\" #>  #> $ssl_cipher #> [1] \"\" #>  #> $ssl_cipher_suite #> [1] \"\" #>  #> $compression #> [1] \"none\" #>  #> $retry_policy_max_attempts #> [1] 5 #>  #> $retry_policy_initial_backoff #> [1] 1000 #>  #> $retry_policy_max_backoff #> [1] 5000 #>  #> $retry_policy_backoff_multiplier #> [1] 1.5 #>  #> $max_queue_size #> [1] 2048 #>  #> $max_export_batch_size #> [1] 512 #>  #> $schedule_delay #> [1] 5000 #>"},{"path":"https://otelsdk.r-lib.org/reference/tracer_provider_memory.html","id":null,"dir":"Reference","previous_headings":"","what":"In-memory tracer provider for testing — tracer_provider_memory","title":"In-memory tracer provider for testing — tracer_provider_memory","text":"Collects spans memory. useful testing instrumented R package application. with_otel_record() uses tracer provider. Use with_otel_record() tests record telemetry check correct.","code":""},{"path":"https://otelsdk.r-lib.org/reference/tracer_provider_memory.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"In-memory tracer provider for testing — tracer_provider_memory","text":"tracer_provider_memory$new() returns otel::otel_tracer_provider object. tp$get_spans() returns named list recorded spans, span names names. tracer_provider_memory$options() returns named list, current values options.","code":""},{"path":"https://otelsdk.r-lib.org/reference/tracer_provider_memory.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"In-memory tracer provider for testing — tracer_provider_memory","text":"tp$get_spans() erases internal buffer tracer provider.","code":"tp <- tracer_provider_memory$new(opts = NULL) tp$get_spans() tracer_provider_memory$options()"},{"path":"https://otelsdk.r-lib.org/reference/tracer_provider_memory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"In-memory tracer provider for testing — tracer_provider_memory","text":"opts: Named list options. See .","code":""},{"path":[]},{"path":"https://otelsdk.r-lib.org/reference/tracer_provider_memory.html","id":"memory-exporter-options","dir":"Reference","previous_headings":"","what":"Memory exporter options","title":"In-memory tracer provider for testing — tracer_provider_memory","text":"buffer_size: buffer size, maximum number spans metrics measurements provider can record. Must positive. Value set opts argument, OTEL_R_EXPORTER_MEMORY_TRACES_BUFFER_SIZE environment variable, OTEL_R_EXPORTER_MEMORY_BUFFER_SIZE environment variable, default 100.","code":""},{"path":"https://otelsdk.r-lib.org/reference/tracer_provider_memory.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"In-memory tracer provider for testing — tracer_provider_memory","text":"","code":"tracer_provider_memory$options() #> $buffer_size #> [1] 100 #>"},{"path":"https://otelsdk.r-lib.org/reference/tracer_provider_stdstream.html","id":null,"dir":"Reference","previous_headings":"","what":"Tracer provider to write to the standard output or standard error or to a file — tracer_provider_stdstream","title":"Tracer provider to write to the standard output or standard error or to a file — tracer_provider_stdstream","text":"Writes spans standard output error, file. Useful debugging.","code":""},{"path":"https://otelsdk.r-lib.org/reference/tracer_provider_stdstream.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tracer provider to write to the standard output or standard error or to a file — tracer_provider_stdstream","text":"tracer_provider_stdstream$new() returns otel::otel_tracer_provider object. tracer_provider_stdstream$options() returns named list, current values options.","code":""},{"path":"https://otelsdk.r-lib.org/reference/tracer_provider_stdstream.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tracer provider to write to the standard output or standard error or to a file — tracer_provider_stdstream","text":"Externally:   R:","code":"OTEL_TRACES_EXPORTER=console OTEL_TRACES_EXPORTER=stderr tracer_provider_stdstream$new(opts = NULL) tracer_provider_stdstream$options()"},{"path":"https://otelsdk.r-lib.org/reference/tracer_provider_stdstream.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tracer provider to write to the standard output or standard error or to a file — tracer_provider_stdstream","text":"opts: Named list options. See .","code":""},{"path":[]},{"path":"https://otelsdk.r-lib.org/reference/tracer_provider_stdstream.html","id":"standard-stream-exporter-options","dir":"Reference","previous_headings":"","what":"Standard stream exporter options","title":"Tracer provider to write to the standard output or standard error or to a file — tracer_provider_stdstream","text":"output: write output. Can \"stdout\": write output standard output, \"stderr\": write output standard error, another string: write output file. (write output file named \"stdout\" \"stderr\", use ./ prefix.) Value set opts argument, OTEL_R_EXPORTER_STDSTREAM_TRACES_OUTPUT environment variable, OTEL_R_EXPORTER_STDSTREAM_OUTPUT environment variable, default \"stdout\".","code":""},{"path":"https://otelsdk.r-lib.org/reference/tracer_provider_stdstream.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tracer provider to write to the standard output or standard error or to a file — tracer_provider_stdstream","text":"","code":"tracer_provider_stdstream$options() #> $output #> [1] \"stdout\" #>"},{"path":"https://otelsdk.r-lib.org/reference/with_otel_record.html","id":null,"dir":"Reference","previous_headings":"","what":"Record OpenTelemetry output, for testing purposes — with_otel_record","title":"Record OpenTelemetry output, for testing purposes — with_otel_record","text":"can use function test OpenTelemetry output correctly generated package application.","code":""},{"path":"https://otelsdk.r-lib.org/reference/with_otel_record.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Record OpenTelemetry output, for testing purposes — with_otel_record","text":"","code":"with_otel_record(   expr,   what = c(\"traces\", \"metrics\"),   tracer_opts = list(),   meter_opts = list() )"},{"path":"https://otelsdk.r-lib.org/reference/with_otel_record.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Record OpenTelemetry output, for testing purposes — with_otel_record","text":"expr Expression evaluate. Character vector, type(s) OpenTelemetry output collect. tracer_opts Named list options pass tracer provider. meter_opts Named list options pass meter provider.","code":""},{"path":"https://otelsdk.r-lib.org/reference/with_otel_record.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Record OpenTelemetry output, for testing purposes — with_otel_record","text":"list output output type. Entries: value: value expr. traces: recorded spans, requested . metrics: recorded metrics measurements, requested .","code":""},{"path":"https://otelsdk.r-lib.org/reference/with_otel_record.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Record OpenTelemetry output, for testing purposes — with_otel_record","text":"evaluates supplied expression, collects OpenTelemetry output returns . Note: with_otel_record() record logs yet. with_otel_record() uses tracer_provider_memory meter_provider_memory internally.","code":""},{"path":"https://otelsdk.r-lib.org/reference/with_otel_record.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Record OpenTelemetry output, for testing purposes — with_otel_record","text":"","code":"spns <- with_otel_record({   trc <- otel::get_tracer(\"mytracer\")   spn1 <- trc$start_local_active_span()   spn2 <- trc$start_local_active_span(\"my\")   spn2$end()   spn1$end()   NULL }) spns #> $value #> NULL #>  #> $traces #> $traces$my #> <otel_span_data> #> trace_id              : 00dceb2be9a854d8e58f96881b7ade52 #> span_id               : 63aba0d18d95f70d #> name                  : my #> flags                 : +sampled -random #> parent                : 1793a6aa9402a9eb #> description           :  #> resource_attributes   :  #>     os.type                     : linux #>     process.owner               : runner #>     process.pid                 : 9152 #>     process.runtime.description : R version 4.5.1 (2025-06-13) #>     process.runtime.name        : R #>     process.runtime.version     : 4.5.1 #>     service.name                : unknown_service #>     telemetry.sdk.language      : R #>     telemetry.sdk.name          : opentelemetry #>     telemetry.sdk.version       : 0.0.0.9000 #> schema_url            :  #> instrumentation_scope :  #>     <otel_instrumentation_scope_data> #>     name       : mytracer #>     version    :  #>     schema_url :  #>     attributes :  #> kind                  : internal #> status                : unset #> start_time            : 2025-08-06 18:38:36 #> duration              : 0.000126578 #> attributes            :  #> events                :  #> links                 :  #>  #> $traces$`<NA>` #> <otel_span_data> #> trace_id              : 00dceb2be9a854d8e58f96881b7ade52 #> span_id               : 1793a6aa9402a9eb #> name                  : <NA> #> flags                 : +sampled -random #> parent                : 0000000000000000 #> description           :  #> resource_attributes   :  #>     os.type                     : linux #>     process.owner               : runner #>     process.pid                 : 9152 #>     process.runtime.description : R version 4.5.1 (2025-06-13) #>     process.runtime.name        : R #>     process.runtime.version     : 4.5.1 #>     service.name                : unknown_service #>     telemetry.sdk.language      : R #>     telemetry.sdk.name          : opentelemetry #>     telemetry.sdk.version       : 0.0.0.9000 #> schema_url            :  #> instrumentation_scope :  #>     <otel_instrumentation_scope_data> #>     name       : mytracer #>     version    :  #>     schema_url :  #>     attributes :  #> kind                  : internal #> status                : unset #> start_time            : 2025-08-06 18:38:36 #> duration              : 0.000296356 #> attributes            :  #> events                :  #> links                 :  #>  #>  #> $metrics #> <otel_metrics_data> #> <otel_resouce_metrics> #> attributes: #>     os.type                     : linux #>     process.owner               : runner #>     process.pid                 : 9152 #>     process.runtime.description : R version 4.5.1 (2025-06-13) #>     process.runtime.name        : R #>     process.runtime.version     : 4.5.1 #>     service.name                : unknown_service #>     telemetry.sdk.language      : R #>     telemetry.sdk.name          : opentelemetry #>     telemetry.sdk.version       : 0.0.0.9000 #> scope_metric_data [0]: #>      #>"}]
