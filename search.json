[{"path":"https://otelsdk.r-lib.org/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 opentelemetry authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://otelsdk.r-lib.org/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Gábor Csárdi. Author, maintainer. . Copyright holder, funder. opentelemetry-cpp authors. Contributor.","code":""},{"path":"https://otelsdk.r-lib.org/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Csárdi G (2025). otelsdk: R Implementation 'OpenTelemetry', Exporters. R package version 0.0.0.9000, https://otelsdk.r-lib.org.","code":"@Manual{,   title = {otelsdk: R Implementation of 'OpenTelemetry', Exporters},   author = {Gábor Csárdi},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://otelsdk.r-lib.org}, }"},{"path":"https://otelsdk.r-lib.org/index.html","id":"otelsdk","dir":"","previous_headings":"","what":"R Implementation of OpenTelemetry, Exporters","title":"R Implementation of OpenTelemetry, Exporters","text":"OpenTelemetry SDK R packages projects OpenTelemetry observability framework. OpenTelemetry collection tools, APIs, SDKs used instrument, generate, collect, export telemetry data metrics, logs, traces, analysis order understand software’s performance behavior. introduction OpenTelemetry, see OpenTelemetry website docs. learn instrument R code, see Getting Started otel package. learn collect telemetry data instrumented R package project, see Collecting Telemetry Data. project status, installation instructions , read .","code":""},{"path":"https://otelsdk.r-lib.org/index.html","id":"features","dir":"","previous_headings":"","what":"Features","title":"R Implementation of OpenTelemetry, Exporters","text":"Lightweight packages. otel small R package without dependencies compiled code. otelsdk needs C++11 compiler otel. Minimal performance impact tracing disabled. otel functions evaluate arguments case. Zero-code instrumentation support. Add tracing () functions selected packages automatically. Configuration via environment variables. Minimal extra code. Add tracing function single extra function call. Production mode: otel functions crash production app production mode. Development mode: otel functions error early development mode.","code":""},{"path":"https://otelsdk.r-lib.org/index.html","id":"the-otel-and-otelsdk-r-packages","dir":"","previous_headings":"","what":"The otel and otelsdk R packages","title":"R Implementation of OpenTelemetry, Exporters","text":"Use otel package dependency want instrument R package project OpenTelemetry. Use otelsdk package produce OpenTelemetry output R package project instrumented otel package.","code":""},{"path":"https://otelsdk.r-lib.org/index.html","id":"reference-documentation","dir":"","previous_headings":"","what":"Reference Documentation","title":"R Implementation of OpenTelemetry, Exporters","text":"otel: https://otel.r-lib.org/reference/ otelsdk: https://otelsdk.r-lib.org/reference/","code":""},{"path":"https://otelsdk.r-lib.org/index.html","id":"status","dir":"","previous_headings":"","what":"Status","title":"R Implementation of OpenTelemetry, Exporters","text":"current status major functional components OpenTelemetry R follows:","code":""},{"path":"https://otelsdk.r-lib.org/index.html","id":"version-support","dir":"","previous_headings":"","what":"Version support","title":"R Implementation of OpenTelemetry, Exporters","text":"otel otelsdk support R 3.6.0 higher Unix R 4.3.0 higher Windows.","code":""},{"path":"https://otelsdk.r-lib.org/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"R Implementation of OpenTelemetry, Exporters","text":"can install development version otel GitHub :","code":"# install.packages(\"pak\") pak::pak(\"r-lib/otelsdk\")"},{"path":"https://otelsdk.r-lib.org/index.html","id":"compiling-from-source","dir":"","previous_headings":"Installation","what":"Compiling from source","title":"R Implementation of OpenTelemetry, Exporters","text":"compile otelsdk source, need install protobuf library first: Windows install correct version Rtools. Linux install appropriate package distribution. macOS, can use CRAN’s protobuf build Homebrew. using CRAN’s build, must uninstall unlink Homebrew protobuf:","code":"brew unlink protobuf"},{"path":"https://otelsdk.r-lib.org/index.html","id":"repositories","dir":"","previous_headings":"","what":"Repositories","title":"R Implementation of OpenTelemetry, Exporters","text":"otel: https://github.com/r-lib/otel otelsdk: https://github.com/r-lib/otelsdk","code":""},{"path":"https://otelsdk.r-lib.org/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"R Implementation of OpenTelemetry, Exporters","text":"MIT © Posit, PBC","code":""},{"path":"https://otelsdk.r-lib.org/reference/collecting.html","id":null,"dir":"Reference","previous_headings":"","what":"Collecting Telemetry Data — Collecting Telemetry Data","title":"Collecting Telemetry Data — Collecting Telemetry Data","text":"page collecting telemetry data instrumented R packages. need help instrumenting R package, see Getting Started otel package.","code":""},{"path":"https://otelsdk.r-lib.org/reference/collecting.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collecting Telemetry Data — Collecting Telemetry Data","text":"Instrument R package project using otel package. Choose exporter otelsdk package. http exporter sends OpenTelemetry output OTLP/HTTP. Set OTEL_TRACES_EXPORTER environment variable point exporter choice. E.g. OTLP/HTTP set OTEL_TRACES_EXPORTER=http. sending telemetry data HTTP, typically need configure URL OpenTelemetry collector, possibly also need supply token HTTP header, possibly resource attributes. Follow instructions provider collector. typically instructions R, generic instructions environment variables work otelsdk R package. E.g. Grafana need something like   See example . Start R app. Telemetry data exported chosen exporter.","code":"OTEL_EXPORTER_OTLP_PROTOCOL=\"http\" OTEL_EXPORTER_OTLP_ENDPOINT=\"https://otlp-gateway-prod-eu-central-0.grafana.net/otlp\" \\ OTEL_RESOURCE_ATTRIBUTES=\"service.name=<name-of-your-app>,service.namespace=<name-of-your-namespace>,deployment.environment=test\" OTEL_EXPORTER_OTLP_HEADERS=\"Authorization=Basic%20<base64-encoded-token>\""},{"path":"https://otelsdk.r-lib.org/reference/collecting.html","id":"setup-for-remote-collectors","dir":"Reference","previous_headings":"","what":"Setup for remote collectors","title":"Collecting Telemetry Data — Collecting Telemetry Data","text":"lot services offer OpenTelemetry collector tracers, logs metrics, many supporting three . also local apps work collector. tried otelsdk following ones:","code":""},{"path":"https://otelsdk.r-lib.org/reference/collecting.html","id":"grafana","dir":"Reference","previous_headings":"","what":"Grafana","title":"Collecting Telemetry Data — Collecting Telemetry Data","text":"Follow documentation. Create API token. need use Grafana instrance ID username, token password HTTP Basic auth. E.g. R get base64 encoded token. instance-id (currently seven digit) number string glc_ prefix.   use encoded token set Authorization header:   endpoint URL probably different, use one see dashboard. want export logs /metrics, set environment variables, respectively:   also makes sense set desired log level. Grafana suggests running OpenTelemetry collector premise instead sending telemetry data directly. nevertheless can start without running collector, call \"quick start\" mode.","code":"openssl::base64_encode(\"<instance-id>:<api-token>\") OTEL_EXPORTER_OTLP_PROTOCOL=\"http\" OTEL_EXPORTER_OTLP_ENDPOINT=\"https://otlp-gateway-prod-eu-central-0.grafana.net/otlp\" \\ OTEL_EXPORTER_OTLP_HEADERS=\"Authorization=Basic%20<base64-encoded-token>\" OTEL_RESOURCE_ATTRIBUTES=\"service.name=<name-of-your-app,service.namespace=<name-of-your-namespace>,deployment.environment=test\" OTEL_LOGS_EXPORTER=http OTEL_LOG_LEVEL=debug OTEL_METRICS_EXPORTER=http"},{"path":"https://otelsdk.r-lib.org/reference/collecting.html","id":"pydantic-logfire","dir":"Reference","previous_headings":"","what":"Pydantic Logfire","title":"Collecting Telemetry Data — Collecting Telemetry Data","text":"Create project write token. Note URLs need use different within EU! probably need replace us eu URL EU. Set environment variables:   logs also set OTEL_LOGS_EXPORTER desired log level:   exporting metrics also set","code":"OTEL_TRACES_EXPORTER=http OTEL_EXPORTER_OTLP_ENDPOINT=\"https://logfire-us.pydantic.dev\" OTEL_EXPORTER_OTLP_HEADERS=\"Authorization=<your-write-token>\" OTEL_LOGS_EXPORTER=http OTEL_LOG_LEVEL=debug OTEL_METRICS_EXPORTER=http"},{"path":[]},{"path":"https://otelsdk.r-lib.org/reference/collecting.html","id":"otel-tui","dir":"Reference","previous_headings":"","what":"otel-tui","title":"Collecting Telemetry Data — Collecting Telemetry Data","text":"otel-tui terminal app supports traces, logs metrics. great development, can keep telemetry local instrumenting package app. Follow installation instructions run app terminal:   listens default port, setup simple, set environment variables (subset want metrics logs):","code":"otel-tui OTEL_TRACES_EXPORTER=http OTEL_LOGS_EXPORTER=http OTEL_LOG_LEVEL=debug OTEL_METRICS_EXPORTER=http"},{"path":"https://otelsdk.r-lib.org/reference/collecting.html","id":"otel-desktop-viewer","dir":"Reference","previous_headings":"","what":"otel-desktop-viewer","title":"Collecting Telemetry Data — Collecting Telemetry Data","text":"otel-desktop-viewer similar otel-tui, web UI. Follow installation instructions start app terminal:   start new windows tab local web browser. Set usual environment variable R app:","code":"otel-desktop-viewer OTEL_TRACES_EXPORTER=http"},{"path":"https://otelsdk.r-lib.org/reference/collecting.html","id":"jaeger","dir":"Reference","previous_headings":"","what":"Jaeger","title":"Collecting Telemetry Data — Collecting Telemetry Data","text":"Docker, can start Jaeger container default port:   Go http://localhost:16686/ view Jaeger UI.","code":"docker run --rm --name jaeger \\  -p 16686:16686 \\  -p 4317:4317 \\  -p 4318:4318 \\  -p 5778:5778 \\  -p 9411:9411 \\  jaegertracing/jaeger:2.4.0"},{"path":"https://otelsdk.r-lib.org/reference/collecting.html","id":"signoz","dir":"Reference","previous_headings":"","what":"SigNoz","title":"Collecting Telemetry Data — Collecting Telemetry Data","text":"run SigNoz locally Docker, clone repository https://github.com/SigNoz/signoz:   run Docker Compose deploy/docker/ subdirectory:   Go http://localhost:8080 see SigNoz UI.","code":"git clone --depth 1 https://github.com/SigNoz/signoz cd deploy/docker docker compose up"},{"path":"https://otelsdk.r-lib.org/reference/collecting.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Collecting Telemetry Data — Collecting Telemetry Data","text":"","code":"# See above"},{"path":"https://otelsdk.r-lib.org/reference/environmentvariables.html","id":null,"dir":"Reference","previous_headings":"","what":"Environment variables to configure otelsdk — Environment Variables","title":"Environment variables to configure otelsdk — Environment Variables","text":"See also Environment Variables otel package, charge selecting exporters use.","code":""},{"path":"https://otelsdk.r-lib.org/reference/environmentvariables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Environment variables to configure otelsdk — Environment Variables","text":"applicable.","code":""},{"path":"https://otelsdk.r-lib.org/reference/environmentvariables.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Environment variables to configure otelsdk — Environment Variables","text":"TODO","code":""},{"path":[]},{"path":"https://otelsdk.r-lib.org/reference/environmentvariables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Environment variables to configure otelsdk — Environment Variables","text":"","code":"# To start an R session using the OTLP exporter: # OTEL_TRACES_EXPORTER=http R -q -f script.R"},{"path":"https://otelsdk.r-lib.org/reference/filesizeoptions.html","id":null,"dir":"Reference","previous_headings":"","what":"File Size Options — File Size Options","title":"File Size Options — File Size Options","text":"otel otelsdk accept file size options following format: positive numeric scalar, interpreted number bytes. string scalar positive number unit suffix. Possible units: B, KB, KiB, MB, MiB, GB, GiB, TB, TiB, PB, PiB. Units case insensitive.","code":""},{"path":"https://otelsdk.r-lib.org/reference/filesizeoptions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"File Size Options — File Size Options","text":"applicable.","code":""},{"path":"https://otelsdk.r-lib.org/reference/logger_provider_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Logger provider to write log messages into a JSONL file. — logger_provider_file","title":"Logger provider to write log messages into a JSONL file. — logger_provider_file","text":"Logger provider write log messages JSONL file.","code":""},{"path":"https://otelsdk.r-lib.org/reference/logger_provider_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Logger provider to write log messages into a JSONL file. — logger_provider_file","text":"","code":"logger_provider_file"},{"path":"https://otelsdk.r-lib.org/reference/logger_provider_file.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Logger provider to write log messages into a JSONL file. — logger_provider_file","text":"object class list length 2.","code":""},{"path":"https://otelsdk.r-lib.org/reference/logger_provider_http.html","id":null,"dir":"Reference","previous_headings":"","what":"Logger provider to log over HTTP — logger_provider_http","title":"Logger provider to log over HTTP — logger_provider_http","text":"Logger provider log HTTP","code":""},{"path":"https://otelsdk.r-lib.org/reference/logger_provider_http.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Logger provider to log over HTTP — logger_provider_http","text":"","code":"logger_provider_http"},{"path":"https://otelsdk.r-lib.org/reference/logger_provider_http.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Logger provider to log over HTTP — logger_provider_http","text":"object class list length 2.","code":""},{"path":"https://otelsdk.r-lib.org/reference/logger_provider_stdstream.html","id":null,"dir":"Reference","previous_headings":"","what":"Logger provider to write to the standard output or standard error or to a file — logger_provider_stdstream","title":"Logger provider to write to the standard output or standard error or to a file — logger_provider_stdstream","text":"Logger provider write standard output standard error file","code":""},{"path":"https://otelsdk.r-lib.org/reference/logger_provider_stdstream.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Logger provider to write to the standard output or standard error or to a file — logger_provider_stdstream","text":"","code":"logger_provider_stdstream"},{"path":"https://otelsdk.r-lib.org/reference/logger_provider_stdstream.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Logger provider to write to the standard output or standard error or to a file — logger_provider_stdstream","text":"object class list length 2.","code":""},{"path":"https://otelsdk.r-lib.org/reference/meter_provider_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Meter provider to collect metrics in JSONL files — meter_provider_file","title":"Meter provider to collect metrics in JSONL files — meter_provider_file","text":"Meter provider collect metrics JSONL files","code":""},{"path":"https://otelsdk.r-lib.org/reference/meter_provider_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Meter provider to collect metrics in JSONL files — meter_provider_file","text":"","code":"meter_provider_file"},{"path":"https://otelsdk.r-lib.org/reference/meter_provider_file.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Meter provider to collect metrics in JSONL files — meter_provider_file","text":"object class list length 2.","code":""},{"path":"https://otelsdk.r-lib.org/reference/meter_provider_http.html","id":null,"dir":"Reference","previous_headings":"","what":"Meter provider to send collected metrics over HTTP — meter_provider_http","title":"Meter provider to send collected metrics over HTTP — meter_provider_http","text":"Meter provider send collected metrics HTTP","code":""},{"path":"https://otelsdk.r-lib.org/reference/meter_provider_http.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Meter provider to send collected metrics over HTTP — meter_provider_http","text":"","code":"meter_provider_http"},{"path":"https://otelsdk.r-lib.org/reference/meter_provider_http.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Meter provider to send collected metrics over HTTP — meter_provider_http","text":"object class list length 2.","code":""},{"path":"https://otelsdk.r-lib.org/reference/meter_provider_memory.html","id":null,"dir":"Reference","previous_headings":"","what":"In-memory meter provider for debugging — meter_provider_memory","title":"In-memory meter provider for debugging — meter_provider_memory","text":"-memory meter provider debugging","code":""},{"path":"https://otelsdk.r-lib.org/reference/meter_provider_memory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"In-memory meter provider for debugging — meter_provider_memory","text":"","code":"meter_provider_memory"},{"path":"https://otelsdk.r-lib.org/reference/meter_provider_memory.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"In-memory meter provider for debugging — meter_provider_memory","text":"object class list length 2.","code":""},{"path":"https://otelsdk.r-lib.org/reference/meter_provider_stdstream.html","id":null,"dir":"Reference","previous_headings":"","what":"Meter provider to write to the standard output or standard error or to a file — meter_provider_stdstream","title":"Meter provider to write to the standard output or standard error or to a file — meter_provider_stdstream","text":"Meter provider write standard output standard error file","code":""},{"path":"https://otelsdk.r-lib.org/reference/meter_provider_stdstream.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Meter provider to write to the standard output or standard error or to a file — meter_provider_stdstream","text":"","code":"meter_provider_stdstream"},{"path":"https://otelsdk.r-lib.org/reference/meter_provider_stdstream.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Meter provider to write to the standard output or standard error or to a file — meter_provider_stdstream","text":"object class list length 2.","code":""},{"path":"https://otelsdk.r-lib.org/reference/otelsdk-package.html","id":null,"dir":"Reference","previous_headings":"","what":"otelsdk: R Implementation of 'OpenTelemetry', Exporters — otelsdk-package","title":"otelsdk: R Implementation of 'OpenTelemetry', Exporters — otelsdk-package","text":"High-quality, ubiquitous, portable telemetry enable effective observability. 'OpenTelemetry' collection tools, 'APIs', 'SDKs' used instrument, generate, collect, export telemetry data (metrics, logs, traces) analysis order understand software's performance behavior. Use package export traces, metrics, logs 'OpenTelemetry Protocol' ('OTLP').","code":""},{"path":[]},{"path":"https://otelsdk.r-lib.org/reference/otelsdk-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"otelsdk: R Implementation of 'OpenTelemetry', Exporters — otelsdk-package","text":"Maintainer: Gábor Csárdi csardi.gabor@gmail.com contributors: Posit Software, PBC (ROR) [copyright holder, funder] opentelemetry-cpp authors [contributor]","code":""},{"path":"https://otelsdk.r-lib.org/reference/timeintervaloptions.html","id":null,"dir":"Reference","previous_headings":"","what":"Time Interval Options — Time Interval Options","title":"Time Interval Options — Time Interval Options","text":"otel otelsdk accept time interval options following format: base::difftime object. positive numeric scalar, interpreted number milliseconds. may fractional. string scalar positive number time unit suffix. Possible time units: us (microseconds), ms (milliseconds), s (seconds), m (minutes), h (hours), d (days). time interval specified environment variable, may : positive number, interpreted number milliseconds. may fractional. positive number time unit suffix. Possible time units: us (microseconds), ms (milliseconds), s (seconds), m (minutes), h (hours), d (days).","code":""},{"path":"https://otelsdk.r-lib.org/reference/timeintervaloptions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Time Interval Options — Time Interval Options","text":"applicable.","code":""},{"path":"https://otelsdk.r-lib.org/reference/tracer_provider_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Tracer provider to write traces into a JSONL file — tracer_provider_file","title":"Tracer provider to write traces into a JSONL file — tracer_provider_file","text":"OTLP file exporter. writes spans JSONL file, span line file, valid JSON value. line separator \\n. preferred file extension jsonl. Select tracer provider OTEL_TRACES_EXPORTER=otlp/file.","code":""},{"path":"https://otelsdk.r-lib.org/reference/tracer_provider_file.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tracer provider to write traces into a JSONL file — tracer_provider_file","text":"Externally:   R:","code":"OTEL_TRACES_EXPORTER=otlp/file tracer_provider_file$new(opts = NULL)"},{"path":"https://otelsdk.r-lib.org/reference/tracer_provider_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tracer provider to write traces into a JSONL file — tracer_provider_file","text":"opts: Named list options. See .","code":""},{"path":"https://otelsdk.r-lib.org/reference/tracer_provider_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tracer provider to write traces into a JSONL file — tracer_provider_file","text":"tracer_provider_file$new() returns otel::otel_tracer_provider object.","code":""},{"path":"https://otelsdk.r-lib.org/reference/tracer_provider_file.html","id":"options","dir":"Reference","previous_headings":"","what":"Options","title":"Tracer provider to write traces into a JSONL file — tracer_provider_file","text":"File exporter options file_pattern: Output file pattern. Value set : opts argument, OTEL_EXPORTER_OTLP_TRACES_FILE environment variable, OTEL_EXPORTER_OTLP_FILE environment variable, default : trace-%N.jsonl. May contain placeholders, see . alias_pattern: file always point latest file. Value set : opts argument, OTEL_EXPORTER_OTLP_TRACES_FILE_ALIAS environment variable, OTEL_EXPORTER_OTLP_FILE_ALIAS environment variable, default : trace-latest.jsonl. May contain placeholders, see . flush_interval: Interval force flush output. time interval specification, see Time Interval Options. Value set opts argument, OTEL_EXPORTER_OTLP_TRACES_FILE_FLUSH_INTERVAL environment variable, OTEL_EXPORTER_OTLP_FILE_FLUSH_INTERVAL environment variable, default 30s, thirty seconds. flush_count: Force flush output every flush_count records. Value set opts argument, OTEL_EXPORTER_OTLP_TRACES_FILE_FLUSH_COUNT environment variable, OTEL_EXPORTER_OTLP_FILE_FLUSH_COUNT environment variable, default 256. file_size: File size rotate output files. file size specification, see File Size Options. Value set opts argument, OTEL_EXPORTER_OTLP_TRACES_FILE_FILE_SIZE environment variable, OTEL_EXPORTER_OTLP_FILE_file_SIZE environment variable, default 20MB. rotate_size: many rotated output files keep. Value set opts argument, OTEL_EXPORTER_OTLP_TRACES_FILE_ROTATE_SIZE environment variable, OTEL_EXPORTER_OTLP_FILE_ROTATE_SIZE environment variable, default 10. Special placeholders available file_pattern alias_pattern: %Y: Writes year 4 digit decimal number. %y: Writes last 2 digits year decimal number (range [00,99]). %m: Writes month decimal number (range [01,12]). %j: Writes day year decimal number (range [001,366]). %d: Writes day month decimal number (range [01,31]). %w: Writes weekday decimal number, Sunday 0 (range [0-6]). %H: Writes hour decimal number, 24 hour clock (range [00-23]). %: Writes hour decimal number, 12 hour clock (range [01,12]). %M: Writes minute decimal number (range [00,59]). %S: Writes second decimal number (range [00,60]). %F: Equivalent %Y-%m-%d (ISO 8601 date format). %T: Equivalent %H:%M:%S (ISO 8601 time format). %R: Equivalent %H:%M. %N: Rotate index, start 0. %n: Rotate index, start 1.","code":""},{"path":"https://otelsdk.r-lib.org/reference/tracer_provider_http.html","id":null,"dir":"Reference","previous_headings":"","what":"Tracer provider to export traces over HTTP — tracer_provider_http","title":"Tracer provider to export traces over HTTP — tracer_provider_http","text":"OTLP HTTP exporter. Select tracer provider OTEL_TRACES_EXPORTER=otlp.","code":""},{"path":"https://otelsdk.r-lib.org/reference/tracer_provider_http.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tracer provider to export traces over HTTP — tracer_provider_http","text":"Externally:   R:","code":"OTEL_TRACER_EXPORTER=otlp tracer_provider_http$new(opts = NULL) tracer_provider_http$options()"},{"path":"https://otelsdk.r-lib.org/reference/tracer_provider_http.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tracer provider to export traces over HTTP — tracer_provider_http","text":"opts: Named list options. See .","code":""},{"path":"https://otelsdk.r-lib.org/reference/tracer_provider_http.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tracer provider to export traces over HTTP — tracer_provider_http","text":"tracer_provider_http$new() returns otel::otel_tracer_provider object. tracer_provider_http$options() returns named list, default values options.","code":""},{"path":"https://otelsdk.r-lib.org/reference/tracer_provider_http.html","id":"options","dir":"Reference","previous_headings":"","what":"Options","title":"Tracer provider to export traces over HTTP — tracer_provider_http","text":"HTTP exporter options: url: OTLP URL send telemetry data . Value set opts argument, needs point traces endpoint, OTEL_EXPORTER_OTLP_TRACES_ENDPOINT environment variable, needs point traces endpoint, OTEL_EXPORTER_OTLP_ENDPOINT environment variable + /v1/traces, default http://localhost:4318/v1/traces. content_type: data format used, JSON binary. Possible values: \"json\", \"application/json\", \"binary\", \"application/x-protobuf\". Value set opts argument, OTEL_R_EXPORTER_OTLP_TRACES_CONTENT_TYPE environment variable, OTEL_R_EXPORTER_OTLP_CONTENT_TYPE environment variable, default \"binary\". json_bytes_mapping: encoding used trace id span id. Possible values: \"hexid\", \"base64\", \"hex\". Value set opts argument, OTEL_R_EXPORTER_OTLP_TRACES_JSON_BYTES_MAPPING environment variable, OTEL_R_EXPORTER_OTLP_JSON_BYTES_MAPPING environment variable, default \"hexid\". use_json_name: whether use json name protobuf field set key json. flag. Value set opts argument, OTEL_R_EXPORTER_OTLP_TRACES_USE_JSON_NAME environment variable, OTEL_R_EXPORTER_OTLP_USE_JSON_NAME environment variable, default FALSE. console_debug: timeout: ssl_insecure_skip_verify: ssl_ca_cert_path: ssl_ca_cert_string: ssl_client_key_path: ssl_client_key_string: ssl_client_cert_path: ssl_client_cert_string: ssl_min_tls: ssl_max_tls: ssl_cipher: ssl_cipher_suite: compression: retry_policy_max_attempts: retry_policy_initial_backoff: retry_policy_max_backoff: retry_policy_backoff_multiplier: Batch processor options: max_queue_size: max_export_batch_size: schedule_delay:","code":""},{"path":"https://otelsdk.r-lib.org/reference/tracer_provider_memory.html","id":null,"dir":"Reference","previous_headings":"","what":"In-memory tracer provider for debugging — tracer_provider_memory","title":"In-memory tracer provider for debugging — tracer_provider_memory","text":"-memory tracer provider debugging","code":""},{"path":"https://otelsdk.r-lib.org/reference/tracer_provider_memory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"In-memory tracer provider for debugging — tracer_provider_memory","text":"","code":"tracer_provider_memory"},{"path":"https://otelsdk.r-lib.org/reference/tracer_provider_memory.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"In-memory tracer provider for debugging — tracer_provider_memory","text":"object class list length 2.","code":""},{"path":"https://otelsdk.r-lib.org/reference/tracer_provider_stdstream.html","id":null,"dir":"Reference","previous_headings":"","what":"Tracer provider to write to the standard output or standard error or to a file — tracer_provider_stdstream","title":"Tracer provider to write to the standard output or standard error or to a file — tracer_provider_stdstream","text":"Tracer provider write standard output standard error file","code":""},{"path":"https://otelsdk.r-lib.org/reference/tracer_provider_stdstream.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tracer provider to write to the standard output or standard error or to a file — tracer_provider_stdstream","text":"","code":"tracer_provider_stdstream"},{"path":"https://otelsdk.r-lib.org/reference/tracer_provider_stdstream.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Tracer provider to write to the standard output or standard error or to a file — tracer_provider_stdstream","text":"object class list length 2.","code":""},{"path":"https://otelsdk.r-lib.org/reference/with_otel_record.html","id":null,"dir":"Reference","previous_headings":"","what":"Record OpenTelemetry output, for testing purposes — with_otel_record","title":"Record OpenTelemetry output, for testing purposes — with_otel_record","text":"can use function test OpenTelemetry output correctly generated package application.","code":""},{"path":"https://otelsdk.r-lib.org/reference/with_otel_record.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Record OpenTelemetry output, for testing purposes — with_otel_record","text":"","code":"with_otel_record(expr, provider_args = list(), what = c(\"traces\"))"},{"path":"https://otelsdk.r-lib.org/reference/with_otel_record.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Record OpenTelemetry output, for testing purposes — with_otel_record","text":"expr Expression evaluate. provider_args list arguments pass -memory OpenTelemetry trace provider. Character vector, type(s) OpenTelemetry output collect. Currently \"traces\" supported.","code":""},{"path":"https://otelsdk.r-lib.org/reference/with_otel_record.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Record OpenTelemetry output, for testing purposes — with_otel_record","text":"list output output type. Currently contains traces.","code":""},{"path":"https://otelsdk.r-lib.org/reference/with_otel_record.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Record OpenTelemetry output, for testing purposes — with_otel_record","text":"evaluates supplied expression, collects OpenTelemetry output returns .","code":""}]
