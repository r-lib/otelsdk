
OTEL_CPP_LIBS =  \
	install/lib/libopentelemetry_exporter_ostream_span.a \
	install/lib/libopentelemetry_exporter_otlp_http.a \
	install/lib/libopentelemetry_exporter_otlp_http_client.a \
	install/lib/libopentelemetry_exporter_ostream_logs.a \
	install/lib/libopentelemetry_exporter_otlp_http_log.a \
	install/lib/libopentelemetry_exporter_otlp_http_metric.a \
	install/lib/libopentelemetry_exporter_ostream_metrics.a \
	install/lib/libopentelemetry_exporter_otlp_file.a \
	install/lib/libopentelemetry_exporter_otlp_file_log.a \
	install/lib/libopentelemetry_exporter_otlp_file_metric.a \
	install/lib/libopentelemetry_exporter_in_memory.a \
	install/lib/libopentelemetry_exporter_in_memory_metric.a \
	install/lib/libopentelemetry_exporter_otlp_file_client.a \
	install/lib/libopentelemetry_http_client_curl.a \
	install/lib/libopentelemetry_otlp_recordable.a \
	install/lib/libopentelemetry_trace.a \
	install/lib/libopentelemetry_logs.a \
	install/lib/libopentelemetry_metrics.a \
	install/lib/libopentelemetry_resources.a \
	install/lib/libopentelemetry_common.a \
	install/lib/libopentelemetry_proto.a

OBJECTS = init.o cleancall.o wrap-r.o wrap-c.o glue.o utils.o errors.o \
	span.o context.o tracer.o tracer-sdk.o tracer-api.o \
	meter.o meter-sdk.o	logger.o logger-sdk.o

PKG_CPPFLAGS = -Iinstall/include -DOPENTELEMETRY_ABI_VERSION_NO=2
PKG_LIBS = \
	-Linstall/lib \
	-lopentelemetry_exporter_ostream_span \
	-lopentelemetry_exporter_otlp_http \
	-lopentelemetry_exporter_otlp_http_client \
	-lopentelemetry_exporter_ostream_logs \
	-lopentelemetry_exporter_otlp_http_log \
	-lopentelemetry_exporter_otlp_http_metric \
	-lopentelemetry_exporter_ostream_metrics \
	-lopentelemetry_exporter_otlp_file \
	-lopentelemetry_exporter_otlp_file_log \
	-lopentelemetry_exporter_otlp_file_metric \
	-lopentelemetry_exporter_in_memory \
	-lopentelemetry_exporter_in_memory_metric \
	-lopentelemetry_exporter_otlp_file_client \
	-lopentelemetry_http_client_curl \
	-lopentelemetry_otlp_recordable \
	-lopentelemetry_trace \
	-lopentelemetry_logs \
	-lopentelemetry_metrics \
	-lopentelemetry_resources \
	-lopentelemetry_common \
	-lopentelemetry_proto \
	@PROTOBUF_LIBS@ \
	@LIBCURL_LIBS@ \
	libstdstream-exporter.a

MAKEFLAGS=@MAKEFLAGS@

all: $(SHLIB) strip mrproper

# need static libs before linking
$(SHLIB): $(OTEL_CPP_LIBS) libstdstream-exporter.a

# need to extract headers before compiling R package
$(OBJECTS): otelcpplib
stdstream.o: otelcpplib

libstdstream-exporter.a: stdstream.o
	$(AR) rs libstdstream-exporter.a $^

# Do not start multiple opentelemetry-cpp builds
# https://stackoverflow.com/a/47951465/604364
.INTERMEDIATE: otelcpplib
$(OTEL_CPP_LIBS): otelcpplib
	@true

# need to build our proto lib with -DNDEBUG in CXXFLAGS, because of a bug:
# https://github.com/protocolbuffers/protobuf/issues/9947
# https://stackoverflow.com/a/73074255/604364
otelcpplib: vendor/opentelemetry-cpp.tgz
	tar xzf vendor/opentelemetry-cpp.tgz --no-same-owner || \
	    tar xzf vendor/opentelemetry-cpp.tgz
	patch -p0 < vendor/opentelemetry-cpp.patch
	@mkdir -p cpp/.git
	(cd cpp; MAKEFLAGS= CC="$(CC)" CXX="$(CXX)" AR="$(AR)" \
	RANLIB="$(RANLIB)" CPPFLAGS="$(CPPFLAGS)" \
	CXXFLAGS="$(CXXFLAGS) $(CXXPICFLAGS) -DNDEBUG @XCXXFLAGS@" \
	CFLAGS="$(CFLAGS) $(CPICFLAGS) -DNDEBUG @XCFLAGS@" \
	cmake -S . -B build \
	-DWITH_ABI_VERSION_1=OFF -DWITH_ABI_VERSION_2=ON \
	-DCMAKE_INSTALL_PREFIX=../install -DCMAKE_INSTALL_LIBDIR=lib \
	-DCMAKE_PREFIX_PATH="@CMAKE_PREFIX_PATH@" \
	-DCMAKE_POSITION_INDEPENDENT_CODE=ON \
	-DBUILD_SHARED_LIBS=OFF -DCMAKE_CXX_STANDARD=@CXX_STANDARD@ \
	-DWITH_ELASTICSEARCH=OFF -DWITH_EXAMPLES=OFF \
	-DWITH_OTLP_GRPC=OFF -DWITH_OTLP_HTTP=ON -DWITH_OTLP_FILE=ON \
	-DWITH_ABSEIL=OFF -DWITH_PROMETHEUS=OFF -DBUILD_TESTING=OFF \
	-DWITH_BENCHMARK=OFF -DWITH_FUNC_TESTS=OFF -DWITH_ETW=OFF)
	@rm -rf cpp/.git
	@if [ "@UNAME@" = "Windows" ]; then \
		sed -i.bak -e 's/^M$$//' cpp/build/CMakeFiles/3.30.4/CompilerIdC/CMakeCCompilerId.c; \
		sed -i.bak -e 's/^M$$//' cpp/build/CMakeFiles/3.30.4/CompilerIdCXX/CMakeCXXCompilerId.cpp; \
		/usr/bin/find . -name Makefile | xargs sed -i.bak -e 's/^M$$//'; \
	fi
	(cd cpp; @CMAKE_BUILD_PARALLEL_LEVEL@ cmake --build build)
	(cd cpp; cmake --install build)
	@find . -type f  -name "*.pb.h" -exec sed -i.bak "s/#pragma/# pragma/g" {} \;

mrproper: $(SHLIB)
	@rm -rf *.a install/lib/*.a \
		cpp/build/exporters/otlp/*.a cpp/build/sdk/src/common/*.a \
		cpp/build/exporters/ostream/*.a

strip: $(SHLIB)
	@if which strip >/dev/null && which uname >/dev/null && test "`uname`" = "Linux" && test "$$_R_SHLIB_STRIP_" = "true" && test -n "$$R_STRIP_SHARED_LIB"; then \
		echo stripping $(SHLIB); \
		echo $$R_STRIP_SHARED_LIB $(SHLIB); \
		$$R_STRIP_SHARED_LIB $(SHLIB); \
	fi

.PHONY: mrproper strip
